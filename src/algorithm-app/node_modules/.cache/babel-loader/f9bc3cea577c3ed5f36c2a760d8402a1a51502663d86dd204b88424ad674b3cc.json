{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NotificationsTab=_ref=>{let{notifications,markAsRead,notificationsEnabled,setNotificationsEnabled}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"notifications\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Notifications\"}),notifications.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No notifications\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"notification-list\",children:notifications.map(notification=>/*#__PURE__*/_jsxs(\"li\",{className:\"notification-item \".concat(notification.read?'read':'unread'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"notification-text\",children:notification.text}),!notification.read&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm btn-primary\",onClick:()=>markAsRead(notification.id),children:\"Mark as read\"})]},notification.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"notification-settings\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:notificationsEnabled,onChange:e=>setNotificationsEnabled(e.target.checked)}),\"Enable email notifications\"]})})]});};export default NotificationsTab;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","NotificationsTab","_ref","notifications","markAsRead","notificationsEnabled","setNotificationsEnabled","className","children","length","map","notification","concat","read","text","onClick","id","type","checked","onChange","e","target"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeProfile/NotificationsTab.js"],"sourcesContent":["import React from 'react';\n\nconst NotificationsTab = ({ \n  notifications, \n  markAsRead, \n  notificationsEnabled, \n  setNotificationsEnabled \n}) => {\n  return (\n    <div className=\"notifications\">\n      <h3>Notifications</h3>\n      {notifications.length === 0 ? (\n        <p>No notifications</p>\n      ) : (\n        <ul className=\"notification-list\">\n          {notifications.map(notification => (\n            <li \n              key={notification.id} \n              className={`notification-item ${notification.read ? 'read' : 'unread'}`}\n            >\n              <span className=\"notification-text\">{notification.text}</span>\n              {!notification.read && (\n                <button \n                  className=\"btn btn-sm btn-primary\"\n                  onClick={() => markAsRead(notification.id)}\n                >\n                  Mark as read\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n      <div className=\"notification-settings\">\n        <label>\n          <input \n            type=\"checkbox\" \n            checked={notificationsEnabled}\n            onChange={(e) => setNotificationsEnabled(e.target.checked)}\n          />\n          Enable email notifications\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationsTab;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,gBAAgB,CAAGC,IAAA,EAKnB,IALoB,CACxBC,aAAa,CACbC,UAAU,CACVC,oBAAoB,CACpBC,uBACF,CAAC,CAAAJ,IAAA,CACC,mBACEF,KAAA,QAAKO,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BV,IAAA,OAAAU,QAAA,CAAI,eAAa,CAAI,CAAC,CACrBL,aAAa,CAACM,MAAM,GAAK,CAAC,cACzBX,IAAA,MAAAU,QAAA,CAAG,kBAAgB,CAAG,CAAC,cAEvBV,IAAA,OAAIS,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAC9BL,aAAa,CAACO,GAAG,CAACC,YAAY,eAC7BX,KAAA,OAEEO,SAAS,sBAAAK,MAAA,CAAuBD,YAAY,CAACE,IAAI,CAAG,MAAM,CAAG,QAAQ,CAAG,CAAAL,QAAA,eAExEV,IAAA,SAAMS,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAEG,YAAY,CAACG,IAAI,CAAO,CAAC,CAC7D,CAACH,YAAY,CAACE,IAAI,eACjBf,IAAA,WACES,SAAS,CAAC,wBAAwB,CAClCQ,OAAO,CAAEA,CAAA,GAAMX,UAAU,CAACO,YAAY,CAACK,EAAE,CAAE,CAAAR,QAAA,CAC5C,cAED,CAAQ,CACT,GAXIG,YAAY,CAACK,EAYhB,CACL,CAAC,CACA,CACL,cACDlB,IAAA,QAAKS,SAAS,CAAC,uBAAuB,CAAAC,QAAA,cACpCR,KAAA,UAAAQ,QAAA,eACEV,IAAA,UACEmB,IAAI,CAAC,UAAU,CACfC,OAAO,CAAEb,oBAAqB,CAC9Bc,QAAQ,CAAGC,CAAC,EAAKd,uBAAuB,CAACc,CAAC,CAACC,MAAM,CAACH,OAAO,CAAE,CAC5D,CAAC,6BAEJ,EAAO,CAAC,CACL,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}