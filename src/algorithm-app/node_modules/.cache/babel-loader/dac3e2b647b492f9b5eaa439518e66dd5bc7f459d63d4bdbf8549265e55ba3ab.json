{"ast":null,"code":"var _jsxFileName = \"/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeProfile/pages/SavedNodesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../CodeLoginAuth/context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SavedNodesPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [savedNodes, setSavedNodes] = useState([]);\n  const [newNodeId, setNewNodeId] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch saved nodes on mount and when user changes\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.UUID) {\n      fetchSavedNodes();\n    } else {\n      setLoading(false);\n    }\n  }, [user]);\n  const fetchSavedNodes = async () => {\n    try {\n      const response = await fetch('/api/saved', {\n        method: 'POST',\n        // POST is required to send body\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          UUID: user.UUID\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch saved nodes');\n      }\n      const data = await response.json();\n      setSavedNodes(data.map(item => item.node_id));\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!newNodeId.trim()) return;\n    setSaving(true);\n    setError(null);\n    try {\n      const response = await fetch('/api/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          UUID: user.UUID,\n          node_id: newNodeId.trim()\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Saving failed');\n      }\n\n      // Refresh list after successful save\n      await fetchSavedNodes();\n      setNewNodeId('');\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setSaving(false);\n    }\n  };\n  if (!user) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Please log in to view saved nodes\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 21\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading saved nodes...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Saved Nodes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: savedNodes.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"divide-y divide-gray-200 border rounded-lg\",\n        children: savedNodes.map((nodeId, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"p-4 hover:bg-gray-50\",\n          children: nodeId\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No saved nodes found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-50 p-4 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newNodeId,\n          onChange: e => setNewNodeId(e.target.value),\n          placeholder: \"Enter node ID to save\",\n          className: \"flex-1 border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          disabled: saving\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: saving,\n          className: \"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50\",\n          children: saving ? 'Saving...' : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(SavedNodesPage, \"OJPOSkW0ke1Oc3LIgyYSVwQxtZU=\", false, function () {\n  return [useAuth];\n});\n_c = SavedNodesPage;\nexport default SavedNodesPage;\nvar _c;\n$RefreshReg$(_c, \"SavedNodesPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","jsxDEV","_jsxDEV","SavedNodesPage","_s","user","savedNodes","setSavedNodes","newNodeId","setNewNodeId","loading","setLoading","saving","setSaving","error","setError","UUID","fetchSavedNodes","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","map","item","node_id","err","message","handleSubmit","e","preventDefault","trim","errorData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","role","length","nodeId","index","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeProfile/pages/SavedNodesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../CodeLoginAuth/context/AuthContext';\n\nconst SavedNodesPage = () => {\n  const { user } = useAuth();\n  const [savedNodes, setSavedNodes] = useState([]);\n  const [newNodeId, setNewNodeId] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch saved nodes on mount and when user changes\n  useEffect(() => {\n    if (user?.UUID) {\n      fetchSavedNodes();\n    } else {\n      setLoading(false);\n    }\n  }, [user]);\n\n  const fetchSavedNodes = async () => {\n    try {\n      const response = await fetch('/api/saved', {\n        method: 'POST', // POST is required to send body\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ UUID: user.UUID })\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch saved nodes');\n      }\n      \n      const data = await response.json();\n      setSavedNodes(data.map(item => item.node_id));\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!newNodeId.trim()) return;\n    \n    setSaving(true);\n    setError(null);\n    \n    try {\n      const response = await fetch('/api/save', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          UUID: user.UUID,\n          node_id: newNodeId.trim()\n        })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Saving failed');\n      }\n\n      // Refresh list after successful save\n      await fetchSavedNodes();\n      setNewNodeId('');\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  if (!user) return <p>Please log in to view saved nodes</p>;\n  if (loading) return <p>Loading saved nodes...</p>;\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-4\">\n      <h1 className=\"text-2xl font-bold mb-6\">Saved Nodes</h1>\n      \n      {error && (\n        <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4\" role=\"alert\">\n          {error}\n        </div>\n      )}\n      \n      {/* Saved nodes list */}\n      <div className=\"mb-8\">\n        {savedNodes.length > 0 ? (\n          <ul className=\"divide-y divide-gray-200 border rounded-lg\">\n            {savedNodes.map((nodeId, index) => (\n              <li key={index} className=\"p-4 hover:bg-gray-50\">\n                {nodeId}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p className=\"text-gray-500\">No saved nodes found</p>\n        )}\n      </div>\n      \n      {/* Save new node form */}\n      <div className=\"bg-gray-50 p-4 rounded-lg\">\n        <form onSubmit={handleSubmit} className=\"flex gap-2\">\n          <input\n            type=\"text\"\n            value={newNodeId}\n            onChange={(e) => setNewNodeId(e.target.value)}\n            placeholder=\"Enter node ID to save\"\n            className=\"flex-1 border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            disabled={saving}\n          />\n          <button\n            type=\"submit\"\n            disabled={saving}\n            className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50\"\n          >\n            {saving ? 'Saving...' : 'Save'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SavedNodesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}