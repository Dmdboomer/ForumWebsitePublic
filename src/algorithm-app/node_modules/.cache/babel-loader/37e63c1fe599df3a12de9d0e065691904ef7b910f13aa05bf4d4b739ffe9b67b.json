{"ast":null,"code":"// src/pages/RootsPage.js\nimport React from'react';import{useParams,useLocation,useNavigate}from'react-router-dom';import DashboardComponent from'../../CodeDashboard/components/DashboardComponent';import useDashboardHover from'../../CodeDashboard/hooks/UseDashboardHover';import SearchBar from'../../CodeHome/SearchBar';import RootsHeader from'../components/RootsHeader';import RootsControls from'../components/RootsControls';import RootsGrid from'../components/RootsGrid';import CreateRootModal from'../components/CreateRootModal';import LoadingState from'../components/LoadingState';import{fetchRoots}from'../services/rootAPI';import'../../CodeCSS/App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RootsPage=()=>{const{id}=useParams();const location=useLocation();const navigate=useNavigate();const[roots,setRoots]=React.useState([]);const[loading,setLoading]=React.useState(true);const[showCreateForm,setShowCreateForm]=React.useState(false);const[sortOption,setSortOption]=React.useState('latest');const[searchParams,setSearchParams]=React.useState({});const{dashboardOpen,handleHoverEnter,handleHoverLeave,handleDashboardEnter,handleDashboardLeave}=useDashboardHover();// Parse search parameters from URL\nReact.useEffect(()=>{const params=new URLSearchParams(location.search);setSearchParams({term:params.get('q')||'',startDate:params.get('startDate')||'',endDate:params.get('endDate')||''});},[location.search]);const loadRoots=React.useCallback(async()=>{setLoading(true);const data=await fetchRoots(id);setRoots(data);setLoading(false);},[id]);React.useEffect(()=>{loadRoots();},[loadRoots]);const handleNewRootCreated=()=>{setShowCreateForm(false);loadRoots();};const handleSearch=function(searchTerm){let filters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const params=new URLSearchParams({q:searchTerm});Object.entries(filters).forEach(_ref=>{let[key,value]=_ref;if(value)params.append(key,value);});navigate(\"/search?\".concat(params.toString()));};const sortedRoots=React.useMemo(()=>{return[...roots].sort((a,b)=>sortOption==='latest'?new Date(b.created_at)-new Date(a.created_at):new Date(a.created_at)-new Date(b.created_at));},[roots,sortOption]);if(loading)return/*#__PURE__*/_jsx(LoadingState,{dashboardOpen:dashboardOpen});return/*#__PURE__*/_jsxs(\"div\",{className:\"page-container\",children:[/*#__PURE__*/_jsx(DashboardComponent,{dashboardOpen:dashboardOpen,handleHoverEnter:handleHoverEnter,handleHoverLeave:handleHoverLeave,handleDashboardEnter:handleDashboardEnter,handleDashboardLeave:handleDashboardLeave}),/*#__PURE__*/_jsxs(\"main\",{className:\"roots-container\",children:[/*#__PURE__*/_jsx(RootsHeader,{}),/*#__PURE__*/_jsx(SearchBar,{onSearch:handleSearch,initialFilters:searchParams}),/*#__PURE__*/_jsx(RootsControls,{onCreateRoot:()=>setShowCreateForm(true),sortOption:sortOption,setSortOption:setSortOption}),showCreateForm&&/*#__PURE__*/_jsx(CreateRootModal,{onClose:handleNewRootCreated,onCancel:()=>setShowCreateForm(false)}),/*#__PURE__*/_jsx(RootsGrid,{roots:sortedRoots})]})]});};export default RootsPage;","map":{"version":3,"names":["React","useParams","useLocation","useNavigate","DashboardComponent","useDashboardHover","SearchBar","RootsHeader","RootsControls","RootsGrid","CreateRootModal","LoadingState","fetchRoots","jsx","_jsx","jsxs","_jsxs","RootsPage","id","location","navigate","roots","setRoots","useState","loading","setLoading","showCreateForm","setShowCreateForm","sortOption","setSortOption","searchParams","setSearchParams","dashboardOpen","handleHoverEnter","handleHoverLeave","handleDashboardEnter","handleDashboardLeave","useEffect","params","URLSearchParams","search","term","get","startDate","endDate","loadRoots","useCallback","data","handleNewRootCreated","handleSearch","searchTerm","filters","arguments","length","undefined","q","Object","entries","forEach","_ref","key","value","append","concat","toString","sortedRoots","useMemo","sort","a","b","Date","created_at","className","children","onSearch","initialFilters","onCreateRoot","onClose","onCancel"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/src/algorithm-app/src/CodeRoot/pages/RootsPage.js"],"sourcesContent":["// src/pages/RootsPage.js\nimport React from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport DashboardComponent from '../../CodeDashboard/components/DashboardComponent';\nimport useDashboardHover from '../../CodeDashboard/hooks/UseDashboardHover';\nimport SearchBar from '../../CodeHome/SearchBar';\nimport RootsHeader from '../components/RootsHeader';\nimport RootsControls from '../components/RootsControls';\nimport RootsGrid from '../components/RootsGrid';\nimport CreateRootModal from '../components/CreateRootModal';\nimport LoadingState from '../components/LoadingState';\nimport { fetchRoots } from '../services/rootAPI';\nimport '../../CodeCSS/App.css';\n\nconst RootsPage = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [roots, setRoots] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [showCreateForm, setShowCreateForm] = React.useState(false);\n  const [sortOption, setSortOption] = React.useState('latest');\n  const [searchParams, setSearchParams] = React.useState({});\n  \n  const {\n    dashboardOpen,\n    handleHoverEnter,\n    handleHoverLeave,\n    handleDashboardEnter,\n    handleDashboardLeave\n  } = useDashboardHover();\n\n  // Parse search parameters from URL\n  React.useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    setSearchParams({\n      term: params.get('q') || '',\n      startDate: params.get('startDate') || '',\n      endDate: params.get('endDate') || ''\n    });\n  }, [location.search]);\n\n  const loadRoots = React.useCallback(async () => {\n    setLoading(true);\n    const data = await fetchRoots(id);\n    setRoots(data);\n    setLoading(false);\n  }, [id]);\n\n  React.useEffect(() => {\n    loadRoots();\n  }, [loadRoots]);\n\n  const handleNewRootCreated = () => {\n    setShowCreateForm(false);\n    loadRoots();\n  };\n\n  const handleSearch = (searchTerm, filters = {}) => {\n    const params = new URLSearchParams({ q: searchTerm });\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value) params.append(key, value);\n    });\n    navigate(`/search?${params.toString()}`);\n  };\n\n  const sortedRoots = React.useMemo(() => {\n    return [...roots].sort((a, b) => \n      sortOption === 'latest' \n        ? new Date(b.created_at) - new Date(a.created_at)\n        : new Date(a.created_at) - new Date(b.created_at)\n    );\n  }, [roots, sortOption]);\n\n  if (loading) return <LoadingState dashboardOpen={dashboardOpen} />;\n\n  return (\n    <div className=\"page-container\">\n      <DashboardComponent \n        dashboardOpen={dashboardOpen}\n        handleHoverEnter={handleHoverEnter}\n        handleHoverLeave={handleHoverLeave}\n        handleDashboardEnter={handleDashboardEnter}\n        handleDashboardLeave={handleDashboardLeave}\n      />\n\n      <main className=\"roots-container\">\n        <RootsHeader />\n        \n        <SearchBar \n          onSearch={handleSearch} \n          initialFilters={searchParams} \n        />\n\n        <RootsControls \n          onCreateRoot={() => setShowCreateForm(true)}\n          sortOption={sortOption}\n          setSortOption={setSortOption}\n        />\n\n        {showCreateForm && (\n          <CreateRootModal \n            onClose={handleNewRootCreated}\n            onCancel={() => setShowCreateForm(false)}\n          />\n        )}\n\n        <RootsGrid roots={sortedRoots} />\n      </main>\n    </div>\n  );\n};\n\nexport default RootsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}