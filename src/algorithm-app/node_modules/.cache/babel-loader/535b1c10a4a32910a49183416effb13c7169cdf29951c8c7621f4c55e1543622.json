{"ast":null,"code":"var _jsxFileName = \"/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeCSS/context/ThemeContext.js\",\n  _s = $RefreshSig$();\n// contexts/ThemeContext.js\nimport { useEffect, useState, createContext } from 'react';\nimport { fetchUserTheme, updateThemePreference } from '../services/themeAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n\n  // Initialize theme from backend\n  useEffect(() => {\n    const initTheme = async () => {\n      try {\n        const savedTheme = await fetchUserTheme();\n        setDarkMode(savedTheme);\n        document.body.classList.toggle('dark-mode', savedTheme);\n      } catch {\n        // Fallback to system preference if API fails\n        const systemDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n        setDarkMode(systemDark);\n      }\n    };\n    initTheme();\n  }, []);\n  const toggleTheme = async () => {\n    const newTheme = !darkMode;\n    setDarkMode(newTheme);\n    document.body.classList.toggle('dark-mode', newTheme);\n    await updateThemePreference(newTheme); // Sync with backend\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      darkMode,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"n2P3coCVngntCnyS/Nqj+dgR7+U=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["useEffect","useState","createContext","fetchUserTheme","updateThemePreference","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","darkMode","setDarkMode","initTheme","savedTheme","document","body","classList","toggle","systemDark","window","matchMedia","matches","toggleTheme","newTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeCSS/context/ThemeContext.js"],"sourcesContent":["// contexts/ThemeContext.js\nimport { useEffect, useState, createContext } from 'react';\nimport { fetchUserTheme, updateThemePreference } from '../services/themeAPI';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  // Initialize theme from backend\n  useEffect(() => {\n    const initTheme = async () => {\n      try {\n        const savedTheme = await fetchUserTheme();\n        setDarkMode(savedTheme);\n        document.body.classList.toggle('dark-mode', savedTheme);\n      } catch {\n        // Fallback to system preference if API fails\n        const systemDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n        setDarkMode(systemDark);\n      }\n    };\n    initTheme();\n  }, []);\n\n  const toggleTheme = async () => {\n    const newTheme = !darkMode;\n    setDarkMode(newTheme);\n    document.body.classList.toggle('dark-mode', newTheme);\n    await updateThemePreference(newTheme); // Sync with backend\n  };\n\n  return (\n    <ThemeContext.Provider value={{ darkMode, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"mappings":";;AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,OAAO;AAC1D,SAASC,cAAc,EAAEC,qBAAqB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,UAAU,GAAG,MAAMX,cAAc,CAAC,CAAC;QACzCS,WAAW,CAACE,UAAU,CAAC;QACvBC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAEJ,UAAU,CAAC;MACzD,CAAC,CAAC,MAAM;QACN;QACA,MAAMK,UAAU,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;QAC5EV,WAAW,CAACO,UAAU,CAAC;MACzB;IACF,CAAC;IACDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,QAAQ,GAAG,CAACb,QAAQ;IAC1BC,WAAW,CAACY,QAAQ,CAAC;IACrBT,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAEM,QAAQ,CAAC;IACrD,MAAMpB,qBAAqB,CAACoB,QAAQ,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,oBACElB,OAAA,CAACC,YAAY,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,QAAQ;MAAEY;IAAY,CAAE;IAAAd,QAAA,EACrDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACpB,EAAA,CA/BWF,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}