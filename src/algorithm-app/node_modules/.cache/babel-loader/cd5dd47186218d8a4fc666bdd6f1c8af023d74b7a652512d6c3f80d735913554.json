{"ast":null,"code":"// src/api/savedNodesAPI.js\nexport const fetchSavedNodes = async UUID => {\n  try {\n    const response = await axios.post('/api/saved', {\n      UUID\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // Axios automatically parses the error response\n      throw new Error(error.response.data.error || 'Failed to fetch saved nodes');\n    } else {\n      throw error;\n    }\n  }\n};\nexport const saveNode = async (UUID, nodeId) => {\n  try {\n    const response = await fetch('/api/save', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        UUID,\n        node_id: nodeId\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'Saving failed');\n    }\n    return response.json();\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["fetchSavedNodes","UUID","response","axios","post","headers","data","error","Error","saveNode","nodeId","fetch","method","body","JSON","stringify","node_id","ok","errorData","json"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeProfile/services/profileAPI.js"],"sourcesContent":["// src/api/savedNodesAPI.js\nexport const fetchSavedNodes = async (UUID) => {\n  try {\n    const response = await axios.post('/api/saved', { UUID }, {\n      headers: { 'Content-Type': 'application/json' }\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // Axios automatically parses the error response\n      throw new Error(error.response.data.error || 'Failed to fetch saved nodes');\n    } else {\n      throw error;\n    }\n  }\n};\n\nexport const saveNode = async (UUID, nodeId) => {\n  try {\n    const response = await fetch('/api/save', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ UUID, node_id: nodeId })\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'Saving failed');\n    }\n\n    return response.json();\n  } catch (error) {\n    throw error;\n  }\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,eAAe,GAAG,MAAOC,IAAI,IAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,YAAY,EAAE;MAAEH;IAAK,CAAC,EAAE;MACxDI,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACF,OAAOH,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACL,QAAQ,EAAE;MAClB;MACA,MAAM,IAAIM,KAAK,CAACD,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACC,KAAK,IAAI,6BAA6B,CAAC;IAC7E,CAAC,MAAM;MACL,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,OAAO,MAAME,QAAQ,GAAG,MAAAA,CAAOR,IAAI,EAAES,MAAM,KAAK;EAC9C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMS,KAAK,CAAC,WAAW,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdP,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,IAAI;QAAEe,OAAO,EAAEN;MAAO,CAAC;IAChD,CAAC,CAAC;IAEF,IAAI,CAACR,QAAQ,CAACe,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIX,KAAK,CAACU,SAAS,CAACX,KAAK,IAAI,eAAe,CAAC;IACrD;IAEA,OAAOL,QAAQ,CAACiB,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}