{"ast":null,"code":"import axios from'axios';export const fetchNode=async id=>{const response=await axios.get(\"/api/nodes/\".concat(id));return response.data;};export const fetchNodeChildren=async id=>{const response=await axios.get(\"/api/nodes/\".concat(id,\"/children\"));return response.data;};export const fetchNodePath=async id=>{const response=await axios.get(\"/api/nodes/\".concat(id,\"/path\"));return response.data.reverse();// Move the reverse logic here\n};export const fetchNodeTree=async function(id){let depth=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;const response=await axios.get(\"/api/nodes/\".concat(id,\"/tree\"),{params:{depth}});return response.data;};export const fetchAllNodeData=async id=>{const[node,children,path,tree]=await Promise.all([fetchNode(id),fetchNodeChildren(id),fetchNodePath(id),fetchNodeTree(id)]);return{node,children,path,tree};};export const completeNode=async(nodeId,score)=>{try{const response=await axios.post(\"/api/nodes/\".concat(nodeId,\"/complete\"),{completedScore:score});return response.data;}catch(error){var _error$response,_error$response$data;console.error(\"Error in completeNode:\",error.message);throw new Error(\"Failed to complete node: \".concat(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||error.message));}};export const createChildNodes=async(parentId,title,content)=>{try{const request1=axios.post('/api/nodes',{parent_id:parseInt(parentId),title,content,statementTrueFalseFlag:1});const request2=axios.post('/api/nodes',{parent_id:parseInt(parentId),title,content,statementTrueFalseFlag:0});await Promise.all([request1,request2]);return{success:true};}catch(error){console.error('Error:',error);return{success:false,error};}};","map":{"version":3,"names":["axios","fetchNode","id","response","get","concat","data","fetchNodeChildren","fetchNodePath","reverse","fetchNodeTree","depth","arguments","length","undefined","params","fetchAllNodeData","node","children","path","tree","Promise","all","completeNode","nodeId","score","post","completedScore","error","_error$response","_error$response$data","console","message","Error","createChildNodes","parentId","title","content","request1","parent_id","parseInt","statementTrueFalseFlag","request2","success"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/src/algorithm-app/src/CodeNode/services/nodeAPI.js"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchNode = async (id) => {\n  const response = await axios.get(`/api/nodes/${id}`);\n  return response.data;\n};\n\nexport const fetchNodeChildren = async (id) => {\n  const response = await axios.get(`/api/nodes/${id}/children`);\n  return response.data;\n};\n\nexport const fetchNodePath = async (id) => {\n  const response = await axios.get(`/api/nodes/${id}/path`);\n  return response.data.reverse(); // Move the reverse logic here\n};\n\nexport const fetchNodeTree = async (id, depth = 4) => {\n  const response = await axios.get(`/api/nodes/${id}/tree`, {\n    params: { depth }\n  });\n  return response.data;\n};\n\nexport const fetchAllNodeData = async (id) => {\n  const [node, children, path, tree] = await Promise.all([\n    fetchNode(id),\n    fetchNodeChildren(id),\n    fetchNodePath(id),\n    fetchNodeTree(id)\n  ]);\n  return { node, children, path, tree };\n};\n\nexport const completeNode = async (nodeId, score) => {\n  try {\n    const response = await axios.post(`/api/nodes/${nodeId}/complete`, {\n      completedScore: score\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error in completeNode:\", error.message);\n    throw new Error(`Failed to complete node: ${error.response?.data?.message || error.message}`);\n  }\n};\n\nexport const createChildNodes = async (parentId, title, content) => {\n  try {\n    const request1 = axios.post('/api/nodes', {\n      parent_id: parseInt(parentId),\n      title, \n      content, \n      statementTrueFalseFlag: 1\n    });\n\n    const request2 = axios.post('/api/nodes', {\n      parent_id: parseInt(parentId),\n      title, \n      content, \n      statementTrueFalseFlag: 0\n    });\n\n    await Promise.all([request1, request2]);\n    return { success: true };\n  } catch (error) {\n    console.error('Error:', error);\n    return { success: false, error };\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}