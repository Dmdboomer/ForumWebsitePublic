{"ast":null,"code":"var _jsxFileName = \"/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeNode/components/TreeVisualization.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// TreeVisualization.js\nimport React, { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport styled from 'styled-components';\nimport Breadcrumb from '../../CodeNode/components/Breadcrumb';\n\n// Centered container for all nodes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CenteredContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\n// NodeCard with theme determined by truthstatus prop\n_c = CenteredContainer;\nconst NodeCard = styled.div`\n  padding: 12px 16px;\n  border-radius: 8px;\n  border: 1px solid \n    ${({\n  truthstatus\n}) => truthstatus === null ? '#2e86c1' : truthstatus ? '#37e418' : '#f85030'};\n  background: \n    ${({\n  truthstatus\n}) => truthstatus === null ? '#aed6f1' : truthstatus ? '#d5f9ce' : '#f9b498'};\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  cursor: pointer;\n  transition: all 0.2s;\n  width: 220px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0,0,0,0.15);\n  }\n`;\n_c2 = NodeCard;\nconst ExpandButton = styled.button`\n  position: absolute;\n  top: -8px;\n  right: -8px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background: white;\n  border: 1px solid #90A4AE;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  z-index: 10;\n  cursor: pointer;\n`;\n_c3 = ExpandButton;\nconst TreeNodeContent = ({\n  node,\n  depth = 0,\n  isExpanded,\n  onExpand,\n  path\n}) => {\n  _s();\n  var _node$children, _node$children2, _node$children3;\n  const navigate = useNavigate();\n  const isLeaf = depth === 4 || !((_node$children = node.children) !== null && _node$children !== void 0 && _node$children.length);\n  const truthstatus = node.statementTrueFalseFlag;\n  const showExpandButton = !isLeaf && ((_node$children2 = node.children) === null || _node$children2 === void 0 ? void 0 : _node$children2.length) > 0;\n  const statusConfig = truthstatus === null ? ['bg-blue-100 text-blue-800', 'Root'] : truthstatus ? ['bg-green-100 text-green-800', '✓ True'] : ['bg-red-100 text-red-800', '✗ False'];\n  const [statusClasses, statusText] = statusConfig;\n  return /*#__PURE__*/_jsxDEV(CenteredContainer, {\n    children: [showExpandButton && /*#__PURE__*/_jsxDEV(ExpandButton, {\n      onClick: e => {\n        e.stopPropagation();\n        onExpand(node.id);\n      },\n      children: isExpanded ? '-' : '+'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NodeCard, {\n      truthstatus: truthstatus,\n      onClick: () => navigate(`/node/${node.id}`),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-medium text-gray-800 truncate\",\n        children: node.title || node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-1 mt-2 justify-center\",\n        children: [node.score !== undefined && (node.score === null || node.score === -1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${statusClasses}`,\n          children: \"Score: N/a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${statusClasses}`,\n          children: [\"Score: \", node.score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)), truthstatus !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-xs px-2 py-1 rounded ${statusClasses}`,\n          children: statusText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), ((_node$children3 = node.children) === null || _node$children3 === void 0 ? void 0 : _node$children3.length) > 0 && !isLeaf && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded\",\n          children: [node.children.length, \" children\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeNodeContent, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c4 = TreeNodeContent;\nconst TreeVisualization = ({\n  treeData,\n  maxDepth = 4,\n  path\n}) => {\n  _s2();\n  var _treeData$children;\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\n  const [isTreeVisible, setIsTreeVisible] = useState(true);\n\n  // FIX 1: Expand root node by default on initial load\n  useEffect(() => {\n    if (treeData !== null && treeData !== void 0 && treeData.id && !expandedNodes.size) {\n      setExpandedNodes(new Set([treeData.id]));\n    }\n  }, [treeData, expandedNodes.size]);\n\n  // FIX 2: Memoized and optimised node ID collection\n  const getAllIds = useCallback(node => {\n    const ids = new Set();\n    const collectIds = n => {\n      var _n$children;\n      ids.add(n.id);\n      (_n$children = n.children) === null || _n$children === void 0 ? void 0 : _n$children.forEach(collectIds);\n    };\n    collectIds(node);\n    return ids;\n  }, []);\n  const toggleNode = useCallback(nodeId => {\n    setExpandedNodes(prev => {\n      const next = new Set(prev);\n      next.has(nodeId) ? next.delete(nodeId) : next.add(nodeId);\n      return next;\n    });\n  }, []);\n  const toggleExpandAll = () => {\n    if (!treeData) return;\n    if (isTreeVisible) {\n      setIsTreeVisible(false);\n    } else {\n      setIsTreeVisible(true);\n      setExpandedNodes(new Set(getAllIds(treeData)));\n    }\n  };\n  if (!treeData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center py-8 text-gray-500\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-3\",\n      children: \"Loading node structure...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree-visualization my-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-800\",\n        children: \"Hierarchy Structure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `px-3 py-1.5 text-sm rounded-md transition-colors ${isTreeVisible ? 'bg-gray-200 text-gray-800 hover:bg-gray-300' : 'bg-blue-100 text-blue-700 hover:bg-blue-200'}`,\n        onClick: toggleExpandAll,\n        children: isTreeVisible ? 'Collapse All' : 'Expand All'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), isTreeVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-container bg-white p-4 rounded-xl border border-gray-200 shadow-sm\",\n      children: [\"Current Path: \", /*#__PURE__*/_jsxDEV(Breadcrumb, {\n        path: path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"#90A4AE\",\n        lineBorderRadius: \"4px\",\n        label: /*#__PURE__*/_jsxDEV(CenteredContainer, {\n          children: /*#__PURE__*/_jsxDEV(TreeNodeContent, {\n            node: treeData,\n            depth: 0,\n            isExpanded: expandedNodes.has(treeData.id),\n            onExpand: toggleNode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this),\n        children: expandedNodes.has(treeData.id) && ((_treeData$children = treeData.children) === null || _treeData$children === void 0 ? void 0 : _treeData$children.map(child => renderTreeNodes(child, 1)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-6 text-gray-500\",\n      children: \"Tree is collapsed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s2(TreeVisualization, \"v4z//G2AZJ2Qd+cytZL3OwhbyTM=\");\n_c5 = TreeVisualization;\nexport default TreeVisualization;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CenteredContainer\");\n$RefreshReg$(_c2, \"NodeCard\");\n$RefreshReg$(_c3, \"ExpandButton\");\n$RefreshReg$(_c4, \"TreeNodeContent\");\n$RefreshReg$(_c5, \"TreeVisualization\");","map":{"version":3,"names":["React","useState","useCallback","useNavigate","Tree","TreeNode","styled","Breadcrumb","jsxDEV","_jsxDEV","CenteredContainer","div","_c","NodeCard","truthstatus","_c2","ExpandButton","button","_c3","TreeNodeContent","node","depth","isExpanded","onExpand","path","_s","_node$children","_node$children2","_node$children3","navigate","isLeaf","children","length","statementTrueFalseFlag","showExpandButton","statusConfig","statusClasses","statusText","onClick","e","stopPropagation","id","fileName","_jsxFileName","lineNumber","columnNumber","className","title","name","score","undefined","_c4","TreeVisualization","treeData","maxDepth","_s2","_treeData$children","expandedNodes","setExpandedNodes","Set","isTreeVisible","setIsTreeVisible","useEffect","size","getAllIds","ids","collectIds","n","_n$children","add","forEach","toggleNode","nodeId","prev","next","has","delete","toggleExpandAll","lineWidth","lineColor","lineBorderRadius","label","map","child","renderTreeNodes","_c5","$RefreshReg$"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeNode/components/TreeVisualization.js"],"sourcesContent":["// TreeVisualization.js\nimport React, { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport styled from 'styled-components';\nimport Breadcrumb from '../../CodeNode/components/Breadcrumb';\n\n// Centered container for all nodes\nconst CenteredContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\n// NodeCard with theme determined by truthstatus prop\nconst NodeCard = styled.div`\n  padding: 12px 16px;\n  border-radius: 8px;\n  border: 1px solid \n    ${({ truthstatus }) => \n      truthstatus === null ? '#2e86c1' : \n      truthstatus ? '#37e418' : '#f85030'};\n  background: \n    ${({ truthstatus }) => \n      truthstatus === null ? '#aed6f1' : \n      truthstatus ? '#d5f9ce' : '#f9b498'};\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  cursor: pointer;\n  transition: all 0.2s;\n  width: 220px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0,0,0,0.15);\n  }\n`;\n\nconst ExpandButton = styled.button`\n  position: absolute;\n  top: -8px;\n  right: -8px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background: white;\n  border: 1px solid #90A4AE;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  z-index: 10;\n  cursor: pointer;\n`;\n\nconst TreeNodeContent = ({ node, depth = 0, isExpanded, onExpand, path }) => {\n  const navigate = useNavigate();\n  const isLeaf = depth === 4 || !node.children?.length;\n  \n  const truthstatus = node.statementTrueFalseFlag;\n  const showExpandButton = !isLeaf && node.children?.length > 0;\n\n  const statusConfig = \n    truthstatus === null ? \n      ['bg-blue-100 text-blue-800', 'Root'] : \n    truthstatus ? \n      ['bg-green-100 text-green-800', '✓ True'] : \n    ['bg-red-100 text-red-800', '✗ False'];\n  \n  const [statusClasses, statusText] = statusConfig;\n\n  return (\n    <CenteredContainer>\n      {showExpandButton && (\n        <ExpandButton \n          onClick={(e) => {\n            e.stopPropagation();\n            onExpand(node.id);\n          }}\n        >\n          {isExpanded ? '-' : '+'}\n        </ExpandButton>\n      )}\n      \n      <NodeCard \n        truthstatus={truthstatus}\n        onClick={() => navigate(`/node/${node.id}`)}\n      >\n        <div className=\"font-medium text-gray-800 truncate\">\n          {node.title || node.name}\n        </div>\n        \n        <div className=\"flex flex-wrap gap-1 mt-2 justify-center\">\n          {node.score !== undefined && (\n            (node.score === null || node.score === -1) ?\n              <span className = {`${statusClasses}`}>\n                Score: N/a\n              </span>:\n              <span className={`${statusClasses}`}>\n                Score: {node.score}\n              </span>\n          )}\n          {truthstatus !== undefined && (\n            <span className={`text-xs px-2 py-1 rounded ${statusClasses}`}>\n              {statusText}\n            </span>\n          )}\n          {node.children?.length > 0 && !isLeaf && (\n            <span className=\"bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded\">\n              {node.children.length} children\n            </span>\n          )}\n        </div>\n      </NodeCard>\n    </CenteredContainer>\n  );\n};\n\nconst TreeVisualization = ({ treeData, maxDepth = 4, path }) => {\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\n  const [isTreeVisible, setIsTreeVisible] = useState(true);\n\n  // FIX 1: Expand root node by default on initial load\n  useEffect(() => {\n    if (treeData?.id && !expandedNodes.size) {\n      setExpandedNodes(new Set([treeData.id]));\n    }\n  }, [treeData, expandedNodes.size]);\n\n  // FIX 2: Memoized and optimised node ID collection\n  const getAllIds = useCallback((node) => {\n    const ids = new Set();\n    const collectIds = (n) => {\n      ids.add(n.id);\n      n.children?.forEach(collectIds);\n    };\n    collectIds(node);\n    return ids;\n  }, []);\n\n  const toggleNode = useCallback((nodeId) => {\n    setExpandedNodes(prev => {\n      const next = new Set(prev);\n      next.has(nodeId) ? next.delete(nodeId) : next.add(nodeId);\n      return next;\n    });\n  }, []);\n\n  const toggleExpandAll = () => {\n    if (!treeData) return;\n    \n    if (isTreeVisible) {\n      setIsTreeVisible(false);\n    } else {\n      setIsTreeVisible(true);\n      setExpandedNodes(new Set(getAllIds(treeData)));\n    }\n  };\n\n  if (!treeData) return (\n    <div className=\"text-center py-8 text-gray-500\">\n      <div className=\"flex justify-center\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500\"></div>\n      </div>\n      <p className=\"mt-3\">Loading node structure...</p>\n    </div>\n  );\n\n  return (\n    <div className=\"tree-visualization my-6\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-800\">Hierarchy Structure</h3>\n        <button \n          className={`px-3 py-1.5 text-sm rounded-md transition-colors ${\n            isTreeVisible \n              ? 'bg-gray-200 text-gray-800 hover:bg-gray-300' \n              : 'bg-blue-100 text-blue-700 hover:bg-blue-200'\n          }`}\n          onClick={toggleExpandAll}\n        >\n          {isTreeVisible ? 'Collapse All' : 'Expand All'}\n        </button>\n      </div>\n      \n      {isTreeVisible ? (\n        <div className=\"tree-container bg-white p-4 rounded-xl border border-gray-200 shadow-sm\">\n          Current Path: <Breadcrumb path={path} />\n          <Tree \n            lineWidth=\"2px\"\n            lineColor=\"#90A4AE\"\n            lineBorderRadius=\"4px\"\n            label={\n              <CenteredContainer>\n                <TreeNodeContent \n                  node={treeData}\n                  depth={0}\n                  isExpanded={expandedNodes.has(treeData.id)}\n                  onExpand={toggleNode}\n                />\n              </CenteredContainer>\n            }\n          >\n            {expandedNodes.has(treeData.id) && treeData.children?.map(child => (\n              renderTreeNodes(child, 1)\n            ))}\n          </Tree>\n        </div>\n      ) : (\n        <div className=\"text-center py-6 text-gray-500\">\n          Tree is collapsed\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TreeVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}