{"ast":null,"code":"// src/services/commentsAPI.js\nimport axios from'axios';export const fetchComments=async function(nodeId){let userId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;try{const response=await axios.get(\"/api/nodes/\".concat(nodeId,\"/comments\"),{params:{userId}});return response.data;}catch(error){var _error$response,_error$response$data;throw new Error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Network response was not ok');}};export const refreshComments=async nodeId=>{try{const response=await axios.get(\"/api/nodes/\".concat(nodeId,\"/comments\"));return response.data;}catch(error){var _error$response2,_error$response2$data;throw new Error(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Failed to refresh comments');}};export const createComment=async(nodeId,content,proStatus)=>{try{const response=await axios.post(\"/api/nodes/\".concat(nodeId,\"/comments\"),{content,proStatus},{headers:{'Content-Type':'application/json','Accept':'application/json'}});return response.data;}catch(error){var _error$response3,_error$response3$data;console.error('API call error:',error);throw new Error(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'API request failed');}};export const endorseComment=async(nodeId,commentId,userId)=>{try{const response=await axios.post(\"/api/nodes/\".concat(nodeId,\"/comments/\").concat(commentId,\"/endorse/\").concat(userId),{},{headers:{'Content-Type':'application/json'}});return response.data;}catch(error){var _error$response4,_error$response4$data;console.error('Endorse error:',error);throw new Error(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to endorse comment');}};export const reportComment=async(nodeId,commentId,userId)=>{try{const response=await axios.post(\"/api/nodes/\".concat(nodeId,\"/comments/\").concat(commentId,\"/report/\").concat(userId),{},{headers:{'Content-Type':'application/json'}});return response.data;}catch(error){var _error$response5,_error$response5$data;console.error('Report error:',error);throw new Error(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Failed to report comment');}};export const unendorseComment=async(nodeId,commentId,userId)=>{try{const response=await axios.post(\"/api/\".concat(nodeId,\"/comments/\").concat(commentId,\"/unendorse/\").concat(userId),{},{headers:{'Content-Type':'application/json'}});return response.data;}catch(error){var _error$response6,_error$response6$data;console.error('unendorse error:',error);throw new Error(((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Failed to unendorse comment');}};export const unreportComment=async(nodeId,commentId,userId)=>{try{const response=await axios.post(\"/api/\".concat(nodeId,\"/comments/\").concat(commentId,\"/unreport/\").concat(userId),{},{headers:{'Content-Type':'application/json'}});return response.data;}catch(error){var _error$response7,_error$response7$data;console.error('Report error:',error);throw new Error(((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)||'Failed to unreport comment');}};","map":{"version":3,"names":["axios","fetchComments","nodeId","userId","arguments","length","undefined","response","get","concat","params","data","error","_error$response","_error$response$data","Error","message","refreshComments","_error$response2","_error$response2$data","createComment","content","proStatus","post","headers","_error$response3","_error$response3$data","console","endorseComment","commentId","_error$response4","_error$response4$data","reportComment","_error$response5","_error$response5$data","unendorseComment","_error$response6","_error$response6$data","unreportComment","_error$response7","_error$response7$data"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/src/algorithm-app/src/CodeNode/services/commentsAPI.js"],"sourcesContent":["// src/services/commentsAPI.js\nimport axios from 'axios';\n\nexport const fetchComments = async (nodeId, userId = null) => {\n  try {\n    const response = await axios.get(`/api/nodes/${nodeId}/comments`, {\n      params: { userId }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Network response was not ok');\n  }\n};\n\nexport const refreshComments = async (nodeId) => {\n  try {\n    const response = await axios.get(`/api/nodes/${nodeId}/comments`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Failed to refresh comments');\n  }\n};\n\nexport const createComment = async (nodeId, content, proStatus) => {\n  try {\n    const response = await axios.post(`/api/nodes/${nodeId}/comments`, \n      { content, proStatus },\n      {\n        headers: { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.error('API call error:', error);\n    throw new Error(error.response?.data?.message || 'API request failed');\n  }\n};\n\nexport const endorseComment = async (nodeId, commentId, userId) => {\n  try {\n    const response = await axios.post(\n      `/api/nodes/${nodeId}/comments/${commentId}/endorse/${userId}`,\n      {},\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Endorse error:', error);\n    throw new Error(error.response?.data?.message || 'Failed to endorse comment');\n  }\n};\n\nexport const reportComment = async (nodeId, commentId, userId) => {\n  try {\n    const response = await axios.post(\n      `/api/nodes/${nodeId}/comments/${commentId}/report/${userId}`,\n      {},\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Report error:', error);\n    throw new Error(error.response?.data?.message || 'Failed to report comment');\n  }\n};\n\nexport const unendorseComment = async (nodeId, commentId, userId) => {\n  try {\n    const response = await axios.post(\n      `/api/${nodeId}/comments/${commentId}/unendorse/${userId}`,\n      {},\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n    return response.data;\n  } catch (error) {\n    console.error('unendorse error:', error);\n    throw new Error(error.response?.data?.message || 'Failed to unendorse comment');\n  }\n};\n\nexport const unreportComment = async (nodeId, commentId, userId) => {\n  try {\n    const response = await axios.post(\n      `/api/${nodeId}/comments/${commentId}/unreport/${userId}`,\n      {},\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Report error:', error);\n    throw new Error(error.response?.data?.message || 'Failed to unreport comment');\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}