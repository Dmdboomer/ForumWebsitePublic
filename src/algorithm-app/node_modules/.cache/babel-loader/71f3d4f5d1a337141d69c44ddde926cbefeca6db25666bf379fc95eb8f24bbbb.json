{"ast":null,"code":"// services/themeService.js\nimport axios from 'axios';\nexport const updateThemePreference = async isDarkMode => {\n  const themeFlag = isDarkMode ? 0 : 1; // Map: dark=true → 0, light=false → 1\n  await axios.post('/api/theme', {\n    themeFlag\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const fetchUserTheme = async () => {\n  const token = localStorage.getItem('token');\n  const response = await axios.get('/api/theme', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data.darkMode;\n};","map":{"version":3,"names":["axios","updateThemePreference","isDarkMode","themeFlag","post","headers","Authorization","token","fetchUserTheme","localStorage","getItem","response","get","data","darkMode"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeSettings/services/themeAPI.js"],"sourcesContent":["// services/themeService.js\nimport axios from 'axios';\n\nexport const updateThemePreference = async (isDarkMode) => {\n  const themeFlag = isDarkMode ? 0 : 1; // Map: dark=true → 0, light=false → 1\n  await axios.post('/api/theme', { themeFlag }, { \n    headers: { Authorization: `Bearer ${token}` } \n  });\n};\n\nexport const fetchUserTheme = async () => {\n  const token = localStorage.getItem('token');\n  const response = await axios.get('/api/theme', {\n    headers: { Authorization: `Bearer ${token}` }\n  });\n  return response.data.darkMode;\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,UAAU,IAAK;EACzD,MAAMC,SAAS,GAAGD,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EACtC,MAAMF,KAAK,CAACI,IAAI,CAAC,YAAY,EAAE;IAAED;EAAU,CAAC,EAAE;IAC5CE,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUC,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMD,KAAK,GAAGE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,YAAY,EAAE;IAC7CP,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUC,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOI,QAAQ,CAACE,IAAI,CAACC,QAAQ;AAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}