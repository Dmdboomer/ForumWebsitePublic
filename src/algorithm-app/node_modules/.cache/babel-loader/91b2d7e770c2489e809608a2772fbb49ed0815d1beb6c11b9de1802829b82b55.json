{"ast":null,"code":"import _objectSpread from\"/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/src/algorithm-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{fetchComments,endorseComment,unendorseComment,reportComment,unreportComment}from'../services/commentsAPI';import{useAuth}from'../../CodeLoginAuth/context/AuthContext';import{completeNode}from'../services/nodeAPI';const useCommentsLogic=nodeId=>{const[comments,setComments]=React.useState([]);const[showCommentForm,setShowCommentForm]=React.useState(false);const[isLoading,setIsLoading]=React.useState(true);const[processing,setProcessing]=React.useState({});const{user}=useAuth();React.useEffect(()=>{let isMounted=true;const loadComments=async()=>{try{setIsLoading(true);if(!nodeId){setComments([]);return;}const userId=(user===null||user===void 0?void 0:user.UUID)||null;const commentsData=await fetchComments(nodeId,userId);if(isMounted)setComments(commentsData);}catch(error){console.error('Error fetching comments:',error);}finally{if(isMounted)setIsLoading(false);}};loadComments();return()=>{isMounted=false;};},[nodeId,user]);const handleNewComment=newComment=>{setComments(prev=>[newComment,...prev]);setShowCommentForm(false);};const handleEndorse=async commentId=>{if(processing[commentId]||!user)return;setProcessing(prev=>_objectSpread(_objectSpread({},prev),{},{[commentId]:'endorsing'}));try{const comment=comments.find(c=>c.id===commentId);const isEndorsed=comment===null||comment===void 0?void 0:comment.is_endorsed;const currentEndorsements=(comment===null||comment===void 0?void 0:comment.endorsement_count)||0;const newEndorsementCount=isEndorsed?currentEndorsements-1:currentEndorsements+1;if(isEndorsed){await unendorseComment(nodeId,commentId,user.UUID);}else{await endorseComment(nodeId,commentId,user.UUID);}setComments(prev=>prev.map(comment=>comment.id===commentId?_objectSpread(_objectSpread({},comment),{},{is_endorsed:!isEndorsed,endorsement_count:newEndorsementCount}):comment));// Trigger node completion after 2 endorsements\nif(!isEndorsed&&newEndorsementCount===1){// Use the comment's proStatus instead of hardcoded 1\nconst comment=comments.find(c=>c.id===commentId);const score=comment.prostatus;console.log(comment,score);completeNode(nodeId,score).then(()=>console.log(\"Node \".concat(nodeId,\" completed after 2 endorsements\"))).catch(err=>console.error('Node completion error:',err));}}catch(error){console.error('Error toggling endorsement:',error);}finally{setProcessing(prev=>{const newState=_objectSpread({},prev);delete newState[commentId];return newState;});}};const handleReport=async commentId=>{if(processing[commentId]||!user)return;setProcessing(prev=>_objectSpread(_objectSpread({},prev),{},{[commentId]:'reporting'}));try{var _comments$find;const isReported=(_comments$find=comments.find(c=>c.id===commentId))===null||_comments$find===void 0?void 0:_comments$find.is_reported;if(isReported){await unreportComment(nodeId,commentId,user.UUID);}else{await reportComment(nodeId,commentId,user.UUID);}setComments(prev=>prev.map(comment=>comment.id===commentId?_objectSpread(_objectSpread({},comment),{},{is_reported:!isReported,report_count:isReported?Math.max(0,comment.report_count-1):comment.report_count+1}):comment));}catch(error){console.error('Error toggling report:',error);}finally{setProcessing(prev=>{const newState=_objectSpread({},prev);delete newState[commentId];return newState;});}};return{comments,showCommentForm,isLoading,processing,user,setShowCommentForm,handleNewComment,handleEndorse,handleReport};};export default useCommentsLogic;","map":{"version":3,"names":["React","fetchComments","endorseComment","unendorseComment","reportComment","unreportComment","useAuth","completeNode","useCommentsLogic","nodeId","comments","setComments","useState","showCommentForm","setShowCommentForm","isLoading","setIsLoading","processing","setProcessing","user","useEffect","isMounted","loadComments","userId","UUID","commentsData","error","console","handleNewComment","newComment","prev","handleEndorse","commentId","_objectSpread","comment","find","c","id","isEndorsed","is_endorsed","currentEndorsements","endorsement_count","newEndorsementCount","map","score","prostatus","log","then","concat","catch","err","newState","handleReport","_comments$find","isReported","is_reported","report_count","Math","max"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/src/algorithm-app/src/CodeNode/components/useCommentsLogic.js"],"sourcesContent":["import React from 'react';\nimport { \n  fetchComments,\n  endorseComment,\n  unendorseComment,\n  reportComment,\n  unreportComment,\n} from '../services/commentsAPI';\nimport { useAuth } from '../../CodeLoginAuth/context/AuthContext';\nimport { completeNode } from '../services/nodeAPI';\n\nconst useCommentsLogic = (nodeId) => {\n  const [comments, setComments] = React.useState([]);\n  const [showCommentForm, setShowCommentForm] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [processing, setProcessing] = React.useState({});\n  const { user } = useAuth();\n\n  React.useEffect(() => {\n    let isMounted = true;\n\n    const loadComments = async () => {\n      try {\n        setIsLoading(true);\n        if (!nodeId) {\n          setComments([]);\n          return;\n        }\n\n        const userId = user?.UUID || null;\n        const commentsData = await fetchComments(nodeId, userId);\n        if (isMounted) setComments(commentsData);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      } finally {\n        if (isMounted) setIsLoading(false);\n      }\n    };\n\n    loadComments();\n\n    return () => { isMounted = false; };\n  }, [nodeId, user]);\n\n  const handleNewComment = (newComment) => { \n    setComments(prev => [newComment, ...prev]);\n    setShowCommentForm(false);\n  };\n\n   const handleEndorse = async (commentId) => {\n    if (processing[commentId] || !user) return;\n    \n    setProcessing(prev => ({...prev, [commentId]: 'endorsing'}));\n    try {\n      const comment = comments.find(c => c.id === commentId);\n      const isEndorsed = comment?.is_endorsed;\n      const currentEndorsements = comment?.endorsement_count || 0;\n      const newEndorsementCount = isEndorsed ? currentEndorsements - 1 : currentEndorsements + 1;\n\n      if (isEndorsed) {\n        await unendorseComment(nodeId, commentId, user.UUID);\n      } else {\n        await endorseComment(nodeId, commentId, user.UUID);\n      }\n      \n      setComments(prev => prev.map(comment => \n        comment.id === commentId \n          ? { \n              ...comment, \n              is_endorsed: !isEndorsed,\n              endorsement_count: newEndorsementCount\n            } \n          : comment\n      ));\n\n      // Trigger node completion after 2 endorsements\n      if (!isEndorsed && newEndorsementCount === 1) {\n        // Use the comment's proStatus instead of hardcoded 1\n        const comment = comments.find(c => c.id === commentId);\n        const score = comment.prostatus;\n        console.log(comment, score)\n        completeNode(nodeId, score)\n          .then(() => console.log(`Node ${nodeId} completed after 2 endorsements`))\n          .catch(err => console.error('Node completion error:', err));\n      }\n    } catch (error) {\n      console.error('Error toggling endorsement:', error);\n    } finally {\n      setProcessing(prev => {\n        const newState = {...prev};\n        delete newState[commentId];\n        return newState;\n      });\n    }\n  };\n\n  const handleReport = async (commentId) => {\n    if (processing[commentId] || !user) return;\n    \n    setProcessing(prev => ({...prev, [commentId]: 'reporting'}));\n    try {\n      const isReported = comments.find(c => c.id === commentId)?.is_reported;\n      \n      if (isReported) {\n        await unreportComment(nodeId, commentId, user.UUID);\n      } else {\n        await reportComment(nodeId, commentId, user.UUID);\n      }\n      \n      setComments(prev => prev.map(comment => \n        comment.id === commentId \n          ? { \n              ...comment, \n              is_reported: !isReported,\n              report_count: isReported \n                ? Math.max(0, comment.report_count - 1)\n                : comment.report_count + 1\n            } \n          : comment\n      ));\n    } catch (error) {\n      console.error('Error toggling report:', error);\n    } finally {\n      setProcessing(prev => {\n        const newState = {...prev};\n        delete newState[commentId];\n        return newState;\n      });\n    }\n  };\n\n  return {\n    comments,\n    showCommentForm,\n    isLoading,\n    processing,\n    user,\n    setShowCommentForm,\n    handleNewComment,\n    handleEndorse,\n    handleReport\n  };\n};\n\nexport default useCommentsLogic;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}