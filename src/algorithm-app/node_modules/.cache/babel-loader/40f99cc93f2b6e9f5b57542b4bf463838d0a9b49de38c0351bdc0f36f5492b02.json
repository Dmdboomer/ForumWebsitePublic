{"ast":null,"code":"var _jsxFileName = \"/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeSettings/context/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState, createContext, useContext, useRef } from 'react';\nimport { fetchUserTheme, updateThemePreference } from '../services/themeAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [currentTheme, setCurrentTheme] = useState('light');\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Apply theme to DOM\n  const applyTheme = theme => {\n    document.documentElement.setAttribute('data-theme', theme);\n  };\n\n  // Load user's theme preference\n  const loadTheme = async () => {\n    setIsLoading(true);\n    try {\n      const savedTheme = await fetchUserTheme();\n      setCurrentTheme(savedTheme);\n      applyTheme(savedTheme);\n    } catch (err) {\n      console.error('Theme loading error:', err);\n      const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      const defaultTheme = systemPrefersDark ? 'dark' : 'light';\n      setCurrentTheme(defaultTheme);\n      applyTheme(defaultTheme);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadTheme();\n  }, []);\n\n  // Set new theme\n  const setTheme = async themeName => {\n    const previousTheme = currentTheme;\n    try {\n      // Optimistic UI update\n      setCurrentTheme(themeName);\n      applyTheme(themeName);\n\n      // Save to server\n      await updateThemePreference(themeName);\n    } catch (error) {\n      console.error(\"Failed to save theme:\", error);\n      // Revert on failure\n      setCurrentTheme(previousTheme);\n      applyTheme(previousTheme);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      currentTheme,\n      setTheme,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"YYEU2Tsty87SDWYeMA2+g7aHwT4=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["useEffect","useState","createContext","useContext","useRef","fetchUserTheme","updateThemePreference","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","currentTheme","setCurrentTheme","isLoading","setIsLoading","applyTheme","theme","document","documentElement","setAttribute","loadTheme","savedTheme","err","console","error","systemPrefersDark","window","matchMedia","matches","defaultTheme","setTheme","themeName","previousTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeSettings/context/ThemeContext.js"],"sourcesContent":["import { useEffect, useState, createContext, useContext, useRef } from 'react';\nimport { fetchUserTheme, updateThemePreference } from '../services/themeAPI';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [currentTheme, setCurrentTheme] = useState('light');\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Apply theme to DOM\n  const applyTheme = (theme) => {\n    document.documentElement.setAttribute('data-theme', theme);\n  };\n\n  // Load user's theme preference\n  const loadTheme = async () => {\n    setIsLoading(true);\n    try {\n      const savedTheme = await fetchUserTheme();\n      setCurrentTheme(savedTheme);\n      applyTheme(savedTheme);\n    } catch (err) {\n      console.error('Theme loading error:', err);\n      const systemPrefersDark = window.matchMedia(\n        '(prefers-color-scheme: dark)'\n      ).matches;\n      const defaultTheme = systemPrefersDark ? 'dark' : 'light';\n      setCurrentTheme(defaultTheme);\n      applyTheme(defaultTheme);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTheme();\n  }, []);\n\n  // Set new theme\n  const setTheme = async (themeName) => {\n    const previousTheme = currentTheme;\n    try {\n      // Optimistic UI update\n      setCurrentTheme(themeName);\n      applyTheme(themeName);\n      \n      // Save to server\n      await updateThemePreference(themeName);\n    } catch (error) {\n      console.error(\"Failed to save theme:\", error);\n      // Revert on failure\n      setCurrentTheme(previousTheme);\n      applyTheme(previousTheme);\n    }\n  };\n\n  return (\n    <ThemeContext.Provider value={{ \n      currentTheme, \n      setTheme,\n      isLoading\n    }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);"],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AAC9E,SAASC,cAAc,EAAEC,qBAAqB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMQ,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;EACzD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA,MAAMgB,UAAU,GAAIC,KAAK,IAAK;IAC5BC,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEH,KAAK,CAAC;EAC5D,CAAC;;EAED;EACA,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BN,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMO,UAAU,GAAG,MAAMlB,cAAc,CAAC,CAAC;MACzCS,eAAe,CAACS,UAAU,CAAC;MAC3BN,UAAU,CAACM,UAAU,CAAC;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;MAC1C,MAAMG,iBAAiB,GAAGC,MAAM,CAACC,UAAU,CACzC,8BACF,CAAC,CAACC,OAAO;MACT,MAAMC,YAAY,GAAGJ,iBAAiB,GAAG,MAAM,GAAG,OAAO;MACzDb,eAAe,CAACiB,YAAY,CAAC;MAC7Bd,UAAU,CAACc,YAAY,CAAC;IAC1B,CAAC,SAAS;MACRf,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdsB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,QAAQ,GAAG,MAAOC,SAAS,IAAK;IACpC,MAAMC,aAAa,GAAGrB,YAAY;IAClC,IAAI;MACF;MACAC,eAAe,CAACmB,SAAS,CAAC;MAC1BhB,UAAU,CAACgB,SAAS,CAAC;;MAErB;MACA,MAAM3B,qBAAqB,CAAC2B,SAAS,CAAC;IACxC,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C;MACAZ,eAAe,CAACoB,aAAa,CAAC;MAC9BjB,UAAU,CAACiB,aAAa,CAAC;IAC3B;EACF,CAAC;EAED,oBACE1B,OAAA,CAACC,YAAY,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAC5BvB,YAAY;MACZmB,QAAQ;MACRjB;IACF,CAAE;IAAAJ,QAAA,EACCA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAC5B,EAAA,CA5DWF,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AA8D1B,OAAO,MAAMgC,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxC,UAAU,CAACM,YAAY,CAAC;AAAA;AAACkC,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}