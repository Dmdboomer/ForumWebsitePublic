{"ast":null,"code":"// Session check\nexport const checkSession = async () => {\n  const response = await fetch('/api/user', {\n    credentials: 'include'\n  });\n  if (!response.ok) {\n    throw new Error('Not authenticated');\n  }\n  return response.json();\n};\n\n// Login\nexport const loginUser = async (email, password) => {\n  const response = await fetch('/api/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    credentials: 'include'\n  });\n  if (!response.ok) {\n    throw new Error('Login failed');\n  }\n  return response.json();\n};\n\n// Signup\nexport const signupUser = async (name, email, password) => {\n  const response = await fetch('/api/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      password\n    }),\n    credentials: 'include'\n  });\n  if (response.status !== 201) {\n    const error = await response.json();\n    throw new Error(error.error || 'Signup failed');\n  }\n};\nexport const logoutUser = async () => {\n  const response = await fetch('/api/logout', {\n    method: 'POST',\n    credentials: 'include'\n  });\n  if (!response.ok) {\n    throw new Error('Logout failed');\n  }\n};\n\n// Dashboard data\nexport const getDashboardData = async () => {\n  const response = await fetch('/dashboard', {\n    credentials: 'include'\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch dashboard data');\n  }\n  return response.json();\n};","map":{"version":3,"names":["checkSession","response","fetch","credentials","ok","Error","json","loginUser","email","password","method","headers","body","JSON","stringify","signupUser","name","status","error","logoutUser","getDashboardData"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/api/auth.js"],"sourcesContent":["// Session check\nexport const checkSession = async () => {\n  const response = await fetch('/api/user', {\n    credentials: 'include',\n  });\n  \n  if (!response.ok) {\n    throw new Error('Not authenticated');\n  }\n  return response.json();\n};\n\n// Login\nexport const loginUser = async (email, password) => {\n  const response = await fetch('/api/login', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email, password }),\n    credentials: 'include',\n  });\n\n  if (!response.ok) {\n    throw new Error('Login failed');\n  }\n  return response.json();\n};\n\n// Signup\nexport const signupUser = async (name, email, password) => {\n  const response = await fetch('/api/signup', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ name, email, password }),\n    credentials: 'include',\n  });\n\n  if (response.status !== 201) {\n    const error = await response.json();\n    throw new Error(error.error || 'Signup failed');\n  }\n};\n\nexport const logoutUser = async () => {\n  const response = await fetch('/api/logout', {\n    method: 'POST',\n    credentials: 'include',\n  });\n  \n  if (!response.ok) {\n    throw new Error('Logout failed');\n  }\n};\n\n// Dashboard data\nexport const getDashboardData = async () => {\n  const response = await fetch('/dashboard', {\n    credentials: 'include',\n  });\n  \n  if (!response.ok) {\n    throw new Error('Failed to fetch dashboard data');\n  }\n  return response.json();\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;IACxCC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;EACtC;EACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAClD,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;IACzCQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,KAAK;MAAEC;IAAS,CAAC,CAAC;IACzCN,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;EACjC;EACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMS,UAAU,GAAG,MAAAA,CAAOC,IAAI,EAAER,KAAK,EAAEC,QAAQ,KAAK;EACzD,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;IAC1CQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEE,IAAI;MAAER,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC/CN,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,IAAIF,QAAQ,CAACgB,MAAM,KAAK,GAAG,EAAE;IAC3B,MAAMC,KAAK,GAAG,MAAMjB,QAAQ,CAACK,IAAI,CAAC,CAAC;IACnC,MAAM,IAAID,KAAK,CAACa,KAAK,CAACA,KAAK,IAAI,eAAe,CAAC;EACjD;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;IAC1CQ,MAAM,EAAE,MAAM;IACdP,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EAClC;AACF,CAAC;;AAED;AACA,OAAO,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;IACzCC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;EACnD;EACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}