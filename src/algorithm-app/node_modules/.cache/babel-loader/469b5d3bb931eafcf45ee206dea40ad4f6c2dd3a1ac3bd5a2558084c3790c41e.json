{"ast":null,"code":"var _jsxFileName = \"/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/components/Login.jsx\",\n  _s = $RefreshSig$();\n// Login.jsx\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = z.object({\n  email: z.string().email('Invalid email'),\n  password: z.string().min(6, 'Password must be 6+ characters')\n});\nexport default function Login() {\n  _s();\n  const {\n    login\n  } = useAuth();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: zodResolver(schema)\n  });\n  const onSubmit = async data => {\n    await login(data.email, data.password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...register('email'),\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors.email.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ...register('password'),\n      type: \"password\",\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors.password.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"6wM3hugYw7Kv1ZaNI/RoVHGgVOI=\", false, function () {\n  return [useAuth, useForm];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useForm","zodResolver","z","useAuth","jsxDEV","_jsxDEV","schema","object","email","string","password","min","Login","_s","login","register","handleSubmit","formState","errors","resolver","onSubmit","data","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","message","type","_c","$RefreshReg$"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/components/Login.jsx"],"sourcesContent":["// Login.jsx\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useAuth } from '../context/AuthContext';\n\nconst schema = z.object({\n  email: z.string().email('Invalid email'),\n  password: z.string().min(6, 'Password must be 6+ characters')\n});\n\nexport default function Login() {\n  const { login } = useAuth();\n  const { register, handleSubmit, formState: { errors } } = useForm({ \n    resolver: zodResolver(schema) \n  });\n\n  const onSubmit = async (data) => {\n    await login(data.email, data.password);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input {...register('email')} placeholder=\"Email\" />\n      {errors.email && <p>{errors.email.message}</p>}\n      \n      <input \n        {...register('password')} \n        type=\"password\" \n        placeholder=\"Password\" \n      />\n      {errors.password && <p>{errors.password.message}</p>}\n      \n      <button type=\"submit\">Login</button>\n    </form>\n  );\n}"],"mappings":";;AAAA;AACA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,CAAC,QAAQ,KAAK;AACvB,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,MAAM,GAAGJ,CAAC,CAACK,MAAM,CAAC;EACtBC,KAAK,EAAEN,CAAC,CAACO,MAAM,CAAC,CAAC,CAACD,KAAK,CAAC,eAAe,CAAC;EACxCE,QAAQ,EAAER,CAAC,CAACO,MAAM,CAAC,CAAC,CAACE,GAAG,CAAC,CAAC,EAAE,gCAAgC;AAC9D,CAAC,CAAC;AAEF,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAM,CAAC,GAAGX,OAAO,CAAC,CAAC;EAC3B,MAAM;IAAEY,QAAQ;IAAEC,YAAY;IAAEC,SAAS,EAAE;MAAEC;IAAO;EAAE,CAAC,GAAGlB,OAAO,CAAC;IAChEmB,QAAQ,EAAElB,WAAW,CAACK,MAAM;EAC9B,CAAC,CAAC;EAEF,MAAMc,QAAQ,GAAG,MAAOC,IAAI,IAAK;IAC/B,MAAMP,KAAK,CAACO,IAAI,CAACb,KAAK,EAAEa,IAAI,CAACX,QAAQ,CAAC;EACxC,CAAC;EAED,oBACEL,OAAA;IAAMe,QAAQ,EAAEJ,YAAY,CAACI,QAAQ,CAAE;IAAAE,QAAA,gBACrCjB,OAAA;MAAA,GAAWU,QAAQ,CAAC,OAAO,CAAC;MAAEQ,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnDT,MAAM,CAACV,KAAK,iBAAIH,OAAA;MAAAiB,QAAA,EAAIJ,MAAM,CAACV,KAAK,CAACoB;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE9CtB,OAAA;MAAA,GACMU,QAAQ,CAAC,UAAU,CAAC;MACxBc,IAAI,EAAC,UAAU;MACfN,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,EACDT,MAAM,CAACR,QAAQ,iBAAIL,OAAA;MAAAiB,QAAA,EAAIJ,MAAM,CAACR,QAAQ,CAACkB;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpDtB,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAP,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX;AAACd,EAAA,CAzBuBD,KAAK;EAAA,QACTT,OAAO,EACiCH,OAAO;AAAA;AAAA8B,EAAA,GAF3ClB,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}