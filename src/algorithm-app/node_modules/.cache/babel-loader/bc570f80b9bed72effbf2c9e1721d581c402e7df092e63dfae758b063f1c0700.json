{"ast":null,"code":"var _jsxFileName = \"/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeRoot/pages/RootsPage.js\",\n  _s = $RefreshSig$();\n// src/pages/RootsPage.js\nimport React from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport DashboardComponent from '../../CodeDashboard/components/DashboardComponent';\nimport useDashboardHover from '../../CodeDashboard/hooks/UseDashboardHover';\nimport SearchBar from '../../CodeHome/SearchBar';\nimport RootsHeader from '../components/RootsHeader';\nimport RootsControls from '../components/RootsControls';\nimport RootsGrid from '../components/RootsGrid';\nimport CreateRootModal from '../components/CreateRootModal';\nimport LoadingState from '../components/LoadingState';\nimport { fetchRoots } from '../services/rootAPI';\nimport '../../CodeCSS/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootsPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [roots, setRoots] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [showCreateForm, setShowCreateForm] = React.useState(false);\n  const [sortOption, setSortOption] = React.useState('latest');\n  const [searchParams, setSearchParams] = React.useState({});\n  const {\n    dashboardOpen,\n    handleHoverEnter,\n    handleHoverLeave,\n    handleDashboardEnter,\n    handleDashboardLeave\n  } = useDashboardHover();\n\n  // Parse search parameters from URL\n  React.useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    setSearchParams({\n      term: params.get('q') || '',\n      startDate: params.get('startDate') || '',\n      endDate: params.get('endDate') || ''\n    });\n  }, [location.search]);\n  const loadRoots = React.useCallback(async () => {\n    setLoading(true);\n    const data = await fetchRoots(id);\n    setRoots(data);\n    setLoading(false);\n  }, [id]);\n  React.useEffect(() => {\n    loadRoots();\n  }, [loadRoots]);\n  const handleNewRootCreated = () => {\n    setShowCreateForm(false);\n    loadRoots();\n  };\n  const handleSearch = (searchTerm, filters = {}) => {\n    const params = new URLSearchParams({\n      q: searchTerm\n    });\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value) params.append(key, value);\n    });\n    navigate(`/search?${params.toString()}`);\n  };\n  const sortedRoots = React.useMemo(() => {\n    return [...roots].sort((a, b) => sortOption === 'latest' ? new Date(b.created_at) - new Date(a.created_at) : new Date(a.created_at) - new Date(b.created_at));\n  }, [roots, sortOption]);\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingState, {\n    dashboardOpen: dashboardOpen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(DashboardComponent, {\n      dashboardOpen: dashboardOpen,\n      handleHoverEnter: handleHoverEnter,\n      handleHoverLeave: handleHoverLeave,\n      handleDashboardEnter: handleDashboardEnter,\n      handleDashboardLeave: handleDashboardLeave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"roots-container\",\n      children: [/*#__PURE__*/_jsxDEV(RootsHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch,\n        initialFilters: searchParams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RootsControls, {\n        onCreateRoot: () => setShowCreateForm(true),\n        sortOption: sortOption,\n        setSortOption: setSortOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), showCreateForm && /*#__PURE__*/_jsxDEV(CreateRootModal, {\n        onClose: handleNewRootCreated,\n        onCancel: () => setShowCreateForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RootsGrid, {\n        roots: sortedRoots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(RootsPage, \"ifnMtBNgNIaGvVOdKf+8kKasKEM=\", false, function () {\n  return [useParams, useLocation, useNavigate, useDashboardHover];\n});\n_c = RootsPage;\nexport default RootsPage;\nvar _c;\n$RefreshReg$(_c, \"RootsPage\");","map":{"version":3,"names":["React","useParams","useLocation","useNavigate","DashboardComponent","useDashboardHover","SearchBar","RootsHeader","RootsControls","RootsGrid","CreateRootModal","LoadingState","fetchRoots","jsxDEV","_jsxDEV","RootsPage","_s","id","location","navigate","roots","setRoots","useState","loading","setLoading","showCreateForm","setShowCreateForm","sortOption","setSortOption","searchParams","setSearchParams","dashboardOpen","handleHoverEnter","handleHoverLeave","handleDashboardEnter","handleDashboardLeave","useEffect","params","URLSearchParams","search","term","get","startDate","endDate","loadRoots","useCallback","data","handleNewRootCreated","handleSearch","searchTerm","filters","q","Object","entries","forEach","key","value","append","toString","sortedRoots","useMemo","sort","a","b","Date","created_at","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onSearch","initialFilters","onCreateRoot","onClose","onCancel","_c","$RefreshReg$"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeRoot/pages/RootsPage.js"],"sourcesContent":["// src/pages/RootsPage.js\nimport React from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport DashboardComponent from '../../CodeDashboard/components/DashboardComponent';\nimport useDashboardHover from '../../CodeDashboard/hooks/UseDashboardHover';\nimport SearchBar from '../../CodeHome/SearchBar';\nimport RootsHeader from '../components/RootsHeader';\nimport RootsControls from '../components/RootsControls';\nimport RootsGrid from '../components/RootsGrid';\nimport CreateRootModal from '../components/CreateRootModal';\nimport LoadingState from '../components/LoadingState';\nimport { fetchRoots } from '../services/rootAPI';\nimport '../../CodeCSS/App.css';\n\nconst RootsPage = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [roots, setRoots] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [showCreateForm, setShowCreateForm] = React.useState(false);\n  const [sortOption, setSortOption] = React.useState('latest');\n  const [searchParams, setSearchParams] = React.useState({});\n  \n  const {\n    dashboardOpen,\n    handleHoverEnter,\n    handleHoverLeave,\n    handleDashboardEnter,\n    handleDashboardLeave\n  } = useDashboardHover();\n\n  // Parse search parameters from URL\n  React.useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    setSearchParams({\n      term: params.get('q') || '',\n      startDate: params.get('startDate') || '',\n      endDate: params.get('endDate') || ''\n    });\n  }, [location.search]);\n\n  const loadRoots = React.useCallback(async () => {\n    setLoading(true);\n    const data = await fetchRoots(id);\n    setRoots(data);\n    setLoading(false);\n  }, [id]);\n\n  React.useEffect(() => {\n    loadRoots();\n  }, [loadRoots]);\n\n  const handleNewRootCreated = () => {\n    setShowCreateForm(false);\n    loadRoots();\n  };\n\n  const handleSearch = (searchTerm, filters = {}) => {\n    const params = new URLSearchParams({ q: searchTerm });\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value) params.append(key, value);\n    });\n    navigate(`/search?${params.toString()}`);\n  };\n\n  const sortedRoots = React.useMemo(() => {\n    return [...roots].sort((a, b) => \n      sortOption === 'latest' \n        ? new Date(b.created_at) - new Date(a.created_at)\n        : new Date(a.created_at) - new Date(b.created_at)\n    );\n  }, [roots, sortOption]);\n\n  if (loading) return <LoadingState dashboardOpen={dashboardOpen} />;\n\n  return (\n    <div className=\"page-container\">\n      <DashboardComponent \n        dashboardOpen={dashboardOpen}\n        handleHoverEnter={handleHoverEnter}\n        handleHoverLeave={handleHoverLeave}\n        handleDashboardEnter={handleDashboardEnter}\n        handleDashboardLeave={handleDashboardLeave}\n      />\n\n      <main className=\"roots-container\">\n        <RootsHeader />\n        \n        <SearchBar \n          onSearch={handleSearch} \n          initialFilters={searchParams} \n        />\n\n        <RootsControls \n          onCreateRoot={() => setShowCreateForm(true)}\n          sortOption={sortOption}\n          setSortOption={setSortOption}\n        />\n\n        {showCreateForm && (\n          <CreateRootModal \n            onClose={handleNewRootCreated}\n            onCancel={() => setShowCreateForm(false)}\n          />\n        )}\n\n        <RootsGrid roots={sortedRoots} />\n      </main>\n    </div>\n  );\n};\n\nexport default RootsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}