{"ast":null,"code":"var _jsxFileName = \"/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeSettings/context/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState, createContext, useContext } from 'react';\nimport { fetchUserTheme, updateThemePreference } from '../services/themeAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    const loadTheme = async () => {\n      try {\n        const savedTheme = await fetchUserTheme();\n        setDarkMode(savedTheme);\n        applyTheme(savedTheme);\n      } catch (err) {\n        console.error(\"Theme load error:\", err);\n        const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n        applyTheme(systemPrefersDark);\n        setDarkMode(systemPrefersDark);\n      }\n    };\n    loadTheme();\n  }, []);\n  const setTheme = async isDark => {\n    setDarkMode(isDark);\n    applyTheme(isDark);\n    await updateThemePreference(isDark); // API call to save preference\n  };\n  const applyTheme = isDark => {\n    document.body.classList.toggle('dark-mode', isDark);\n    document.body.classList.toggle('light-mode', !isDark);\n  };\n  const toggleTheme = async () => {\n    const newTheme = !darkMode;\n    try {\n      await updateThemePreference(newTheme); // API call first\n      setDarkMode(newTheme); // Update state only after success\n      applyTheme(newTheme);\n    } catch (error) {\n      console.error(\"Failed to save theme:\", error);\n      // Revert UI on failure\n      applyTheme(darkMode);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      darkMode,\n      toggleTheme,\n      setTheme // Expose new setter function\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"n2P3coCVngntCnyS/Nqj+dgR7+U=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["useEffect","useState","createContext","useContext","fetchUserTheme","updateThemePreference","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","darkMode","setDarkMode","loadTheme","savedTheme","applyTheme","err","console","error","systemPrefersDark","window","matchMedia","matches","setTheme","isDark","document","body","classList","toggle","toggleTheme","newTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeSettings/context/ThemeContext.js"],"sourcesContent":["import { useEffect, useState, createContext, useContext } from 'react';\nimport { fetchUserTheme, updateThemePreference } from '../services/themeAPI';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [darkMode, setDarkMode] = useState(false);\n  \n  useEffect(() => {\n    const loadTheme = async () => {\n      try {\n        const savedTheme = await fetchUserTheme();\n        setDarkMode(savedTheme);\n        applyTheme(savedTheme);\n      } catch (err) {\n        console.error(\"Theme load error:\", err);\n        const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n        applyTheme(systemPrefersDark);\n        setDarkMode(systemPrefersDark);\n      }\n    };\n    loadTheme();\n  }, []);\n\n  const setTheme = async (isDark) => {\n    setDarkMode(isDark);\n    applyTheme(isDark);\n    await updateThemePreference(isDark); // API call to save preference\n  };\n\n  const applyTheme = (isDark) => {\n    document.body.classList.toggle('dark-mode', isDark);\n    document.body.classList.toggle('light-mode', !isDark);\n  };\n\n  const toggleTheme = async () => {\n    const newTheme = !darkMode;\n    try {\n      await updateThemePreference(newTheme); // API call first\n      setDarkMode(newTheme); // Update state only after success\n      applyTheme(newTheme);\n    } catch (error) {\n      console.error(\"Failed to save theme:\", error); \n      // Revert UI on failure\n      applyTheme(darkMode); \n    }\n  };\n\n  return (\n    <ThemeContext.Provider value={{ \n      darkMode, \n      toggleTheme,\n      setTheme // Expose new setter function\n    }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);"],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACtE,SAASC,cAAc,EAAEC,qBAAqB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,UAAU,GAAG,MAAMX,cAAc,CAAC,CAAC;QACzCS,WAAW,CAACE,UAAU,CAAC;QACvBC,UAAU,CAACD,UAAU,CAAC;MACxB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAAC;QACvC,MAAMG,iBAAiB,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;QACnFP,UAAU,CAACI,iBAAiB,CAAC;QAC7BP,WAAW,CAACO,iBAAiB,CAAC;MAChC;IACF,CAAC;IACDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,QAAQ,GAAG,MAAOC,MAAM,IAAK;IACjCZ,WAAW,CAACY,MAAM,CAAC;IACnBT,UAAU,CAACS,MAAM,CAAC;IAClB,MAAMpB,qBAAqB,CAACoB,MAAM,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,MAAMT,UAAU,GAAIS,MAAM,IAAK;IAC7BC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAEJ,MAAM,CAAC;IACnDC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,EAAE,CAACJ,MAAM,CAAC;EACvD,CAAC;EAED,MAAMK,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,QAAQ,GAAG,CAACnB,QAAQ;IAC1B,IAAI;MACF,MAAMP,qBAAqB,CAAC0B,QAAQ,CAAC,CAAC,CAAC;MACvClB,WAAW,CAACkB,QAAQ,CAAC,CAAC,CAAC;MACvBf,UAAU,CAACe,QAAQ,CAAC;IACtB,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C;MACAH,UAAU,CAACJ,QAAQ,CAAC;IACtB;EACF,CAAC;EAED,oBACEL,OAAA,CAACC,YAAY,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAC5BrB,QAAQ;MACRkB,WAAW;MACXN,QAAQ,CAAC;IACX,CAAE;IAAAd,QAAA,EACCA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAC1B,EAAA,CApDWF,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAsD1B,OAAO,MAAM8B,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrC,UAAU,CAACK,YAAY,CAAC;AAAA;AAACgC,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}