{"ast":null,"code":"import axios from \"axios\";\n// src/api/savedNodesAPI.js\nconst BASE_URL = 'http://localhost:5000/api/';\nexport const fetchSavedNodes = async UUID => {\n  try {\n    const response = await axios.post('/api/saved', {\n      UUID\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // Axios automatically parses the error response\n      throw new Error(error.response.data.error || 'Failed to fetch saved nodes');\n    } else {\n      throw error;\n    }\n  }\n};\nexport const saveNode = async (UUID, nodeId) => {\n  try {\n    const response = await axios.post('/api/save', {\n      UUID,\n      node_id: nodeId\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      throw new Error(error.response.data.error || 'Saving failed');\n    } else {\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","fetchSavedNodes","UUID","response","post","headers","data","error","Error","saveNode","nodeId","node_id"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeProfile/services/profileAPI.js"],"sourcesContent":["import axios from \"axios\";\n// src/api/savedNodesAPI.js\nconst BASE_URL = 'http://localhost:5000/api/';\nexport const fetchSavedNodes = async (UUID) => {\n  try {\n    const response = await axios.post('/api/saved', { UUID }, {\n      headers: { 'Content-Type': 'application/json' }\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // Axios automatically parses the error response\n      throw new Error(error.response.data.error || 'Failed to fetch saved nodes');\n    } else {\n      throw error;\n    }\n  }\n};\n\nexport const saveNode = async (UUID, nodeId) => {\n  try {\n    const response = await axios.post('/api/save', { UUID, node_id: nodeId }, {\n      headers: { 'Content-Type': 'application/json' }\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      throw new Error(error.response.data.error || 'Saving failed');\n    } else {\n      throw error;\n    }\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,QAAQ,GAAG,4BAA4B;AAC7C,OAAO,MAAMC,eAAe,GAAG,MAAOC,IAAI,IAAK;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,YAAY,EAAE;MAAEF;IAAK,CAAC,EAAE;MACxDG,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACJ,QAAQ,EAAE;MAClB;MACA,MAAM,IAAIK,KAAK,CAACD,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACC,KAAK,IAAI,6BAA6B,CAAC;IAC7E,CAAC,MAAM;MACL,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,OAAO,MAAME,QAAQ,GAAG,MAAAA,CAAOP,IAAI,EAAEQ,MAAM,KAAK;EAC9C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,WAAW,EAAE;MAAEF,IAAI;MAAES,OAAO,EAAED;IAAO,CAAC,EAAE;MACxEL,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACJ,QAAQ,EAAE;MAClB,MAAM,IAAIK,KAAK,CAACD,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACC,KAAK,IAAI,eAAe,CAAC;IAC/D,CAAC,MAAM;MACL,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}