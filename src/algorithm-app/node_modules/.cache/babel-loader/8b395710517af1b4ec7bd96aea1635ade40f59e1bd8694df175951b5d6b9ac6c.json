{"ast":null,"code":"// src/components/SettingsSidebar.jsx\nimport React from'react';import'../nonGlobalStyles/Settings.css';import{jsx as _jsx}from\"react/jsx-runtime\";const SettingsSidebar=_ref=>{let{tabs,activeTab,setActiveTab}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"settings-sidebar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"sidebar-tabs\",children:tabs.map(tab=>/*#__PURE__*/_jsx(\"button\",{className:\"tab-button \".concat(activeTab===tab.id?'active':''),onClick:()=>setActiveTab(tab.id),children:tab.label},tab.id))})});};export default SettingsSidebar;","map":{"version":3,"names":["React","jsx","_jsx","SettingsSidebar","_ref","tabs","activeTab","setActiveTab","className","children","map","tab","concat","id","onClick","label"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeSettings/components/SettingsSidebar.js"],"sourcesContent":["// src/components/SettingsSidebar.jsx\nimport React from 'react';\nimport '../nonGlobalStyles/Settings.css';\n\nconst SettingsSidebar = ({ tabs, activeTab, setActiveTab }) => {\n  return (\n    <div className=\"settings-sidebar\">\n      <div className=\"sidebar-tabs\">\n        {tabs.map((tab) => (\n          <button\n            key={tab.id}\n            className={`tab-button ${activeTab === tab.id ? 'active' : ''}`}\n            onClick={() => setActiveTab(tab.id)}\n          >\n            {tab.label}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsSidebar;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,iCAAiC,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEzC,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAAuC,IAAtC,CAAEC,IAAI,CAAEC,SAAS,CAAEC,YAAa,CAAC,CAAAH,IAAA,CACxD,mBACEF,IAAA,QAAKM,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BP,IAAA,QAAKM,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1BJ,IAAI,CAACK,GAAG,CAAEC,GAAG,eACZT,IAAA,WAEEM,SAAS,eAAAI,MAAA,CAAgBN,SAAS,GAAKK,GAAG,CAACE,EAAE,CAAG,QAAQ,CAAG,EAAE,CAAG,CAChEC,OAAO,CAAEA,CAAA,GAAMP,YAAY,CAACI,GAAG,CAACE,EAAE,CAAE,CAAAJ,QAAA,CAEnCE,GAAG,CAACI,KAAK,EAJLJ,GAAG,CAACE,EAKH,CACT,CAAC,CACC,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAV,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}