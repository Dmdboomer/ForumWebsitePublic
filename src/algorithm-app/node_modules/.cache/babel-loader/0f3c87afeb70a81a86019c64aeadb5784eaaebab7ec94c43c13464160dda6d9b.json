{"ast":null,"code":"const BASE_URL = 'http://localhost:5000/api/nodes';\nexport const completeNode = async (nodeId, score) => {\n  try {\n    const response = await fetch(`${BASE_URL}/${nodeId}/complete`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        completedScore: score\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(`Failed to complete node: ${errorData.message || response.statusText}`);\n    }\n    return response.json();\n  } catch (error) {\n    console.error(\"Error in completeNode:\", error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","completeNode","nodeId","score","response","fetch","method","headers","body","JSON","stringify","completedScore","ok","errorData","json","Error","message","statusText","error","console"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeNode/services/nodeAPI.js"],"sourcesContent":["const BASE_URL = 'http://localhost:5000/api/nodes';\n\nexport const completeNode = async (nodeId, score) => {\n  try {\n    const response = await fetch(`${BASE_URL}/${nodeId}/complete`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ completedScore: score }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(`Failed to complete node: ${errorData.message || response.statusText}`);\n    }\n    return response.json();\n  } catch (error) {\n    console.error(\"Error in completeNode:\", error.message);\n    throw error;\n  }\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,iCAAiC;AAElD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,MAAM,EAAEC,KAAK,KAAK;EACnD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,IAAIE,MAAM,WAAW,EAAE;MAC7DI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,cAAc,EAAER;MAAM,CAAC;IAChD,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAAC,4BAA4BF,SAAS,CAACG,OAAO,IAAIZ,QAAQ,CAACa,UAAU,EAAE,CAAC;IACzF;IACA,OAAOb,QAAQ,CAACU,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACF,OAAO,CAAC;IACtD,MAAME,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}