{"ast":null,"code":"import axios from 'axios';\nexport const searchAPI = {\n  performSearch: async (term, startDate, endDate) => {\n    try {\n      if (!(term !== null && term !== void 0 && term.trim())) throw new Error('Search term is required');\n      const baseUrl = process.env.REACT_APP_API_BASE_URL || window.location.origin;\n      const url = `${baseUrl}/api/search`;\n      const params = {\n        term: encodeURIComponent(term.trim())\n      };\n      if (startDate && !isNaN(new Date(startDate).getTime())) {\n        params.startDate = new Date(startDate).toISOString();\n      }\n      if (endDate && !isNaN(new Date(endDate).getTime())) {\n        params.endDate = new Date(endDate).toISOString();\n      }\n      const response = await axios.get(url, {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Search failed:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","searchAPI","performSearch","term","startDate","endDate","trim","Error","baseUrl","process","env","REACT_APP_API_BASE_URL","window","location","origin","url","params","encodeURIComponent","isNaN","Date","getTime","toISOString","response","get","data","error","console"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeHome/services/searchAPI.js"],"sourcesContent":["import axios from 'axios';\n\nexport const searchAPI = {\n  performSearch: async (term, startDate, endDate) => {\n    try {\n      if (!term?.trim()) throw new Error('Search term is required');\n      \n      const baseUrl = process.env.REACT_APP_API_BASE_URL || window.location.origin;\n      const url = `${baseUrl}/api/search`;\n      \n      const params = {\n        term: encodeURIComponent(term.trim())\n      };\n      \n      if (startDate && !isNaN(new Date(startDate).getTime())) {\n        params.startDate = new Date(startDate).toISOString();\n      }\n      if (endDate && !isNaN(new Date(endDate).getTime())) {\n        params.endDate = new Date(endDate).toISOString();\n      }\n\n      const response = await axios.get(url, { params });\n      return response.data;\n    } catch (error) {\n      console.error('Search failed:', error);\n      throw error;\n    }\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,SAAS,GAAG;EACvBC,aAAa,EAAE,MAAAA,CAAOC,IAAI,EAAEC,SAAS,EAAEC,OAAO,KAAK;IACjD,IAAI;MACF,IAAI,EAACF,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEG,IAAI,CAAC,CAAC,GAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAE7D,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAIC,MAAM,CAACC,QAAQ,CAACC,MAAM;MAC5E,MAAMC,GAAG,GAAG,GAAGP,OAAO,aAAa;MAEnC,MAAMQ,MAAM,GAAG;QACbb,IAAI,EAAEc,kBAAkB,CAACd,IAAI,CAACG,IAAI,CAAC,CAAC;MACtC,CAAC;MAED,IAAIF,SAAS,IAAI,CAACc,KAAK,CAAC,IAAIC,IAAI,CAACf,SAAS,CAAC,CAACgB,OAAO,CAAC,CAAC,CAAC,EAAE;QACtDJ,MAAM,CAACZ,SAAS,GAAG,IAAIe,IAAI,CAACf,SAAS,CAAC,CAACiB,WAAW,CAAC,CAAC;MACtD;MACA,IAAIhB,OAAO,IAAI,CAACa,KAAK,CAAC,IAAIC,IAAI,CAACd,OAAO,CAAC,CAACe,OAAO,CAAC,CAAC,CAAC,EAAE;QAClDJ,MAAM,CAACX,OAAO,GAAG,IAAIc,IAAI,CAACd,OAAO,CAAC,CAACgB,WAAW,CAAC,CAAC;MAClD;MAEA,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAACR,GAAG,EAAE;QAAEC;MAAO,CAAC,CAAC;MACjD,OAAOM,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}