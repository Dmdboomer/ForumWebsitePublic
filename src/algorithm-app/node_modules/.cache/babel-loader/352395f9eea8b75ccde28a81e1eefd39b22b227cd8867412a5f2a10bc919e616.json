{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{fetchUserTheme,updateThemePreference}from'../services/themeAPI';// Adjust path as needed\nimport{useAuth}from'../../CodeLoginAuth/context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const useTheme=()=>useContext(ThemeContext);export const ThemeProvider=_ref=>{let{children}=_ref;const{isLoggedIn}=useAuth();const[currentTheme,setCurrentTheme]=useState('light');const[isLoading,setIsLoading]=useState(true);const[themeOptions]=useState(['light','dark','blue','contrast'// Add new themes here in the future\n]);useEffect(()=>{let isMounted=true;const loadTheme=async()=>{try{setIsLoading(true);const localTheme=localStorage.getItem('theme');const serverTheme=isLoggedIn?await fetchUserTheme():null;const theme=serverTheme||localTheme||getSystemTheme();if(isMounted){applyThemeToDocument(theme);setCurrentTheme(theme);localStorage.setItem('theme',theme);}}catch(err){console.error('Theme load error:',err);if(isMounted)applyThemeToDocument('light');}finally{if(isMounted)setIsLoading(false);}};loadTheme();return()=>{isMounted=false;};},[isLoggedIn]);// ðŸ‘ˆ Re-run when login status changes\nconst getSystemTheme=()=>{return window.matchMedia('(prefers-color-scheme: dark)').matches?'dark':'light';};const applyThemeToDocument=theme=>{document.documentElement.setAttribute('data-theme',theme);};const setTheme=async themeName=>{if(!themeOptions.includes(themeName))return;// Apply immediately to DOM first\napplyThemeToDocument(themeName);// ðŸ‘ˆ DOM update FIRST\nsetCurrentTheme(themeName);// ðŸ‘ˆ State update SECOND\nlocalStorage.setItem('theme',themeName);try{await updateThemePreference(themeName);}catch(err){console.error('Theme sync failed:',err);// Optional: Revert to previous theme on error\n}};// To add new themes dynamically (call this in settings UI)\nconst addThemeOption=newTheme=>{if(!themeOptions.includes(newTheme)){themeOptions.push(newTheme);// In real app, you'd trigger a state update here\n}};const value={currentTheme,setTheme,isLoading,themeOptions,addThemeOption// For future theme expansions\n};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","fetchUserTheme","updateThemePreference","useAuth","jsx","_jsx","ThemeContext","useTheme","ThemeProvider","_ref","children","isLoggedIn","currentTheme","setCurrentTheme","isLoading","setIsLoading","themeOptions","isMounted","loadTheme","localTheme","localStorage","getItem","serverTheme","theme","getSystemTheme","applyThemeToDocument","setItem","err","console","error","window","matchMedia","matches","document","documentElement","setAttribute","setTheme","themeName","includes","addThemeOption","newTheme","push","value","Provider"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeSettings/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { fetchUserTheme, updateThemePreference } from '../services/themeAPI'; // Adjust path as needed\nimport { useAuth } from '../../CodeLoginAuth/context/AuthContext';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider = ({ children }) => {\n  const { isLoggedIn } = useAuth();\n  const [currentTheme, setCurrentTheme] = useState('light');\n  const [isLoading, setIsLoading] = useState(true);\n  const [themeOptions] = useState([\n    'light', \n    'dark', \n    'blue', \n    'contrast'\n    // Add new themes here in the future\n  ]);\n\n  useEffect(() => {\n    let isMounted = true;\n    \n    const loadTheme = async () => {\n      try {\n        setIsLoading(true);\n        const localTheme = localStorage.getItem('theme');\n        const serverTheme = isLoggedIn ? await fetchUserTheme() : null;\n        const theme = serverTheme || localTheme || getSystemTheme();\n        \n        if (isMounted) {\n          applyThemeToDocument(theme);\n          setCurrentTheme(theme);\n          localStorage.setItem('theme', theme);\n        }\n      } catch (err) {\n        console.error('Theme load error:', err);\n        if (isMounted) applyThemeToDocument('light');\n      } finally {\n        if (isMounted) setIsLoading(false);\n      }\n    };\n\n    loadTheme();\n\n    return () => { isMounted = false };\n  }, [isLoggedIn]); // ðŸ‘ˆ Re-run when login status changes\n\n  const getSystemTheme = () => {\n    return window.matchMedia('(prefers-color-scheme: dark)').matches \n      ? 'dark' \n      : 'light';\n  };\n\n  const applyThemeToDocument = (theme) => {\n  document.documentElement.setAttribute('data-theme', theme);\n  };\n\n  const setTheme = async (themeName) => {\n    if (!themeOptions.includes(themeName)) return;\n    \n    // Apply immediately to DOM first\n    applyThemeToDocument(themeName); // ðŸ‘ˆ DOM update FIRST\n    setCurrentTheme(themeName);       // ðŸ‘ˆ State update SECOND\n    localStorage.setItem('theme', themeName);\n    \n    try {\n      await updateThemePreference(themeName);\n    } catch (err) {\n      console.error('Theme sync failed:', err);\n      // Optional: Revert to previous theme on error\n    }\n  };\n\n  // To add new themes dynamically (call this in settings UI)\n  const addThemeOption = (newTheme) => {\n    if (!themeOptions.includes(newTheme)) {\n      themeOptions.push(newTheme);\n      // In real app, you'd trigger a state update here\n    }\n  };\n\n  const value = {\n    currentTheme,\n    setTheme,\n    isLoading,\n    themeOptions,\n    addThemeOption // For future theme expansions\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}