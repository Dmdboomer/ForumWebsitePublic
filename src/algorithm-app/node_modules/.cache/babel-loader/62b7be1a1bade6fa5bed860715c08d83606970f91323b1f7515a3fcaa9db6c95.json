{"ast":null,"code":"var _jsxFileName = \"/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeSettings/context/ThemeContext.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, createContext, useContext } from 'react';\nimport { fetchUserTheme, updateThemePreference } from '../services/themeAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [currentTheme, setCurrentTheme] = useState('light');\n\n  // Apply theme to DOM\n  const applyTheme = theme => {\n    document.documentElement.setAttribute('data-theme', theme);\n  };\n\n  // Fetch theme from server\n  const loadTheme = async () => {\n    try {\n      const savedTheme = await fetchUserTheme();\n      setCurrentTheme(savedTheme);\n      applyTheme(savedTheme);\n    } catch (err) {\n      const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      const defaultTheme = systemPrefersDark ? 'dark' : 'light';\n      setCurrentTheme(defaultTheme);\n      applyTheme(defaultTheme);\n    }\n  };\n  useEffect(() => {\n    loadTheme();\n  }, []);\n\n  // Set new theme (supports multiple themes)\n  const setTheme = async themeName => {\n    try {\n      await updateThemePreference(themeName);\n      setCurrentTheme(themeName);\n      applyTheme(themeName);\n    } catch (error) {\n      console.error(\"Failed to save theme:\", error);\n      applyTheme(currentTheme); // Revert on failure\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      currentTheme,\n      setTheme,\n      reloadTheme: loadTheme // Expose reload function\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"Lejb1i4u7WfVBoaijmgVVxlI00c=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["useEffect","useState","createContext","useContext","fetchUserTheme","updateThemePreference","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","currentTheme","setCurrentTheme","applyTheme","theme","document","documentElement","setAttribute","loadTheme","savedTheme","err","systemPrefersDark","window","matchMedia","matches","defaultTheme","setTheme","themeName","error","console","Provider","value","reloadTheme","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeSettings/context/ThemeContext.js"],"sourcesContent":["import { useEffect, useState, createContext, useContext } from 'react';\nimport { fetchUserTheme, updateThemePreference } from '../services/themeAPI';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [currentTheme, setCurrentTheme] = useState('light');\n  \n  // Apply theme to DOM\n  const applyTheme = (theme) => {\n    document.documentElement.setAttribute('data-theme', theme);\n  };\n\n  // Fetch theme from server\n  const loadTheme = async () => {\n    try {\n      const savedTheme = await fetchUserTheme();\n      setCurrentTheme(savedTheme);\n      applyTheme(savedTheme);\n    } catch (err) {\n      const systemPrefersDark = window.matchMedia(\n        '(prefers-color-scheme: dark)'\n      ).matches;\n      const defaultTheme = systemPrefersDark ? 'dark' : 'light';\n      setCurrentTheme(defaultTheme);\n      applyTheme(defaultTheme);\n    }\n  };\n\n  useEffect(() => {\n    loadTheme();\n  }, []);\n\n  // Set new theme (supports multiple themes)\n  const setTheme = async (themeName) => {\n    try {\n      await updateThemePreference(themeName);\n      setCurrentTheme(themeName);\n      applyTheme(themeName);\n    } catch (error) {\n      console.error(\"Failed to save theme:\", error);\n      applyTheme(currentTheme); // Revert on failure\n    }\n  };\n\n  return (\n    <ThemeContext.Provider value={{ \n      currentTheme, \n      setTheme,\n      reloadTheme: loadTheme // Expose reload function\n    }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACtE,SAASC,cAAc,EAAEC,qBAAqB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,OAAO,CAAC;;EAEzD;EACA,MAAMa,UAAU,GAAIC,KAAK,IAAK;IAC5BC,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEH,KAAK,CAAC;EAC5D,CAAC;;EAED;EACA,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,UAAU,GAAG,MAAMhB,cAAc,CAAC,CAAC;MACzCS,eAAe,CAACO,UAAU,CAAC;MAC3BN,UAAU,CAACM,UAAU,CAAC;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,UAAU,CACzC,8BACF,CAAC,CAACC,OAAO;MACT,MAAMC,YAAY,GAAGJ,iBAAiB,GAAG,MAAM,GAAG,OAAO;MACzDT,eAAe,CAACa,YAAY,CAAC;MAC7BZ,UAAU,CAACY,YAAY,CAAC;IAC1B;EACF,CAAC;EAED1B,SAAS,CAAC,MAAM;IACdmB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,QAAQ,GAAG,MAAOC,SAAS,IAAK;IACpC,IAAI;MACF,MAAMvB,qBAAqB,CAACuB,SAAS,CAAC;MACtCf,eAAe,CAACe,SAAS,CAAC;MAC1Bd,UAAU,CAACc,SAAS,CAAC;IACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7Cf,UAAU,CAACF,YAAY,CAAC,CAAC,CAAC;IAC5B;EACF,CAAC;EAED,oBACEL,OAAA,CAACC,YAAY,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAC5BpB,YAAY;MACZe,QAAQ;MACRM,WAAW,EAAEd,SAAS,CAAC;IACzB,CAAE;IAAAT,QAAA,EACCA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAC1B,EAAA,CAjDWF,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}