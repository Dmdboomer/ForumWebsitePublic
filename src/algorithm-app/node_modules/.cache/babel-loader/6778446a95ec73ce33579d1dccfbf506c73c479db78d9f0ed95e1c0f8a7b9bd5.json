{"ast":null,"code":"import axios from'axios';// Session check\nexport const checkSession=async()=>{try{const response=await axios.get('/api/user',{withCredentials:true});return response.data;}catch(error){if(!error.response||error.response.status!==200){throw new Error('Not authenticated');}throw error;}};// Login\nexport const loginUser=async(email,password)=>{try{const response=await axios.post('/api/login',{email,password},{headers:{'Content-Type':'application/json'},withCredentials:true});return response.data;}catch(error){if(!error.response||error.response.status!==200){throw new Error('Login failed');}throw error;}};// Signup\nexport const signupUser=async(name,email,password)=>{try{const response=await axios.post('/api/signup',{name,email,password},{headers:{'Content-Type':'application/json'},withCredentials:true});if(response.status!==201){throw new Error(response.data.error||'Signup failed');}}catch(error){if(error.response){throw new Error(error.response.data.error||'Signup failed');}throw error;}};// Logout\nexport const logoutUser=async()=>{try{const response=await axios.post('/api/logout',{},{withCredentials:true});if(response.status!==200){throw new Error('Logout failed');}}catch(error){if(!error.response||error.response.status!==200){throw new Error('Logout failed');}throw error;}};// Dashboard data\nexport const getDashboardData=async()=>{try{const response=await axios.get('/dashboard',{withCredentials:true});return response.data;}catch(error){if(!error.response||error.response.status!==200){throw new Error('Failed to fetch dashboard data');}throw error;}};// Google login\nexport const loginWithGoogleAPI=async token=>{try{const response=await axios.post('/api/auth/google',{token},{headers:{'Content-Type':'application/json'},withCredentials:true});return response.data;}catch(error){if(!error.response||error.response.status!==200){throw new Error('Google login failed');}throw error;}};","map":{"version":3,"names":["axios","checkSession","response","get","withCredentials","data","error","status","Error","loginUser","email","password","post","headers","signupUser","name","logoutUser","getDashboardData","loginWithGoogleAPI","token"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/src/algorithm-app/src/CodeLoginAuth/services/auth.js"],"sourcesContent":["import axios from 'axios';\n\n// Session check\nexport const checkSession = async () => {\n  try {\n    const response = await axios.get('/api/user', { withCredentials: true });\n    return response.data;\n  } catch (error) {\n    if (!error.response || error.response.status !== 200) {\n      throw new Error('Not authenticated');\n    }\n    throw error;\n  }\n};\n\n// Login\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await axios.post('/api/login', { email, password }, {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    if (!error.response || error.response.status !== 200) {\n      throw new Error('Login failed');\n    }\n    throw error;\n  }\n};\n\n// Signup\nexport const signupUser = async (name, email, password) => {\n  try {\n    const response = await axios.post('/api/signup', { name, email, password }, {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true\n    });\n    if (response.status !== 201) {\n      throw new Error(response.data.error || 'Signup failed');\n    }\n  } catch (error) {\n    if (error.response) {\n      throw new Error(error.response.data.error || 'Signup failed');\n    }\n    throw error;\n  }\n};\n\n// Logout\nexport const logoutUser = async () => {\n  try {\n    const response = await axios.post('/api/logout', {}, {\n      withCredentials: true\n    });\n    if (response.status !== 200) {\n      throw new Error('Logout failed');\n    }\n  } catch (error) {\n    if (!error.response || error.response.status !== 200) {\n      throw new Error('Logout failed');\n    }\n    throw error;\n  }\n};\n\n// Dashboard data\nexport const getDashboardData = async () => {\n  try {\n    const response = await axios.get('/dashboard', { withCredentials: true });\n    return response.data;\n  } catch (error) {\n    if (!error.response || error.response.status !== 200) {\n      throw new Error('Failed to fetch dashboard data');\n    }\n    throw error;\n  }\n};\n\n// Google login\nexport const loginWithGoogleAPI = async (token) => {\n  try {\n    const response = await axios.post('/api/auth/google', { token }, {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    if (!error.response || error.response.status !== 200) {\n      throw new Error('Google login failed');\n    }\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}