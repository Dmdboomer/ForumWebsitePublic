{"ast":null,"code":"var _jsxFileName = \"/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeSettings/components/SettingsContent.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsContent = ({\n  activeTab\n}) => {\n  _s();\n  const {\n    darkMode,\n    toggleTheme\n  } = useTheme(); // Correct hook usage\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-content\",\n    children: activeTab === 'display' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Display Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: darkMode,\n              onChange: toggleTheme\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"theme-label\",\n            children: darkMode ? 'Dark Mode' : 'Light Mode'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsContent, \"Sv+UslXnmVr1RWTZDTazV04asPE=\", false, function () {\n  return [useTheme];\n});\n_c = SettingsContent;\nvar _c;\n$RefreshReg$(_c, \"SettingsContent\");","map":{"version":3,"names":["React","useContext","useTheme","jsxDEV","_jsxDEV","SettingsContent","activeTab","_s","darkMode","toggleTheme","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeSettings/components/SettingsContent.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useTheme } from '../contexts/ThemeContext';\n\nconst SettingsContent = ({ activeTab }) => {\n  const { darkMode, toggleTheme } = useTheme(); // Correct hook usage\n\n  return (\n    <div className=\"settings-content\">\n      {activeTab === 'display' && (\n        <div>\n          <h2>Display Settings</h2>\n          <div className=\"settings-item\">\n            <label>Theme</label>\n            <div className=\"theme-toggle-container\">\n              <label className=\"switch\">\n                <input \n                  type=\"checkbox\" \n                  checked={darkMode}\n                  onChange={toggleTheme}\n                />\n                <span className=\"slider round\"></span>\n              </label>\n              <span className=\"theme-label\">\n                {darkMode ? 'Dark Mode' : 'Light Mode'}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n      {/* Other tabs remain unchanged */}\n    </div>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE9C,oBACEE,OAAA;IAAKM,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAC9BL,SAAS,KAAK,SAAS,iBACtBF,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAAO,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBX,OAAA;QAAKM,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BP,OAAA;UAAAO,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBX,OAAA;UAAKM,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrCP,OAAA;YAAOM,SAAS,EAAC,QAAQ;YAAAC,QAAA,gBACvBP,OAAA;cACEY,IAAI,EAAC,UAAU;cACfC,OAAO,EAAET,QAAS;cAClBU,QAAQ,EAAET;YAAY;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC,eACFX,OAAA;cAAMM,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,eACRX,OAAA;YAAMM,SAAS,EAAC,aAAa;YAAAC,QAAA,EAC1BH,QAAQ,GAAG,WAAW,GAAG;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEV,CAAC;AAACR,EAAA,CA7BIF,eAAe;EAAA,QACeH,QAAQ;AAAA;AAAAiB,EAAA,GADtCd,eAAe;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}