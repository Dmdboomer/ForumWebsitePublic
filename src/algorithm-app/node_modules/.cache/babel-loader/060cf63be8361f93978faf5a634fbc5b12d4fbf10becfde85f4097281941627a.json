{"ast":null,"code":"var _jsxFileName = \"/Users/yc/Documents/MainWebsiteTree/Algorithm+TopicSutff/algorithm-app/src/pages/NodePage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport NodeDetails from '../components/NodePageComponents/NodeDetails';\nimport CommentsSection from '../components/NodePageComponents/CommentsSection';\nimport ChildrenList from '../components/NodePageComponents/ChildrenList';\nimport ActionButtons from '../components/NodePageComponents/ActionButtons';\nimport Breadcrumb from '../components/NodePageComponents/Breadcrumb';\nimport TreeVisualization from '../components/NodePageComponents/TreeVisualization';\nimport '../css/NodePage.css';\n\n// Utility function for safe JSON parsing [5,9](@ref)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst safeFetch = async url => {\n  try {\n    const response = await fetch(url);\n\n    // Handle HTTP errors (4xx/5xx status codes) [1,4](@ref)\n    if (!response.ok) {\n      const errorText = await response.text();\n      const error = new Error(`HTTP error! Status: ${response.status}, URL: ${url}`);\n      error.response = response;\n      error.responseText = errorText;\n      throw error;\n    }\n\n    // Handle empty responses [5,9](@ref)\n    const text = await response.text();\n    if (!text.trim()) {\n      throw new Error('Empty response received');\n    }\n    return JSON.parse(text);\n  } catch (error) {\n    console.error(`Fetch error for ${url}:`, error);\n    throw error;\n  }\n};\nconst NodePage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [node, setNode] = React.useState(null);\n  const [children, setChildren] = React.useState([]);\n  const [path, setPath] = React.useState([]);\n  const [treeData, setTreeData] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n\n  // Fetch node data with comprehensive error handling [2,5](@ref)\n  React.useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const urls = [`http://localhost:5000/api/nodes/${id}`, `http://localhost:5000/api/nodes/${id}/children`, `http://localhost:5000/api/nodes/${id}/path`, `http://localhost:5000/api/nodes/${id}/tree?depth=4`];\n        const [nodeData, childrenData, pathData, treeData] = await Promise.all(urls.map(url => safeFetch(url)));\n        setNode(nodeData);\n        setChildren(childrenData);\n        setPath(pathData.reverse());\n        setTreeData(treeData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError({\n          message: error.message,\n          responseText: error.responseText || 'No additional error details'\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [id]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center my-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Error Loading Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), error.responseText && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Server response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"bg-light p-2 mt-1\",\n          children: error.responseText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n  if (!node) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-danger\",\n    children: \"Node not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      path: path\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NodeDetails, {\n      node: node\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TreeVisualization, {\n      treeData: treeData,\n      maxDepth: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentsSection, {\n      nodeId: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChildrenList, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionButtons, {\n      node: node,\n      navigate: navigate,\n      nodeId: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(NodePage, \"jFWayXLly2Yl88KkUHjWM7Hm1UI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NodePage;\nexport default NodePage;\nvar _c;\n$RefreshReg$(_c, \"NodePage\");","map":{"version":3,"names":["React","useParams","useNavigate","NodeDetails","CommentsSection","ChildrenList","ActionButtons","Breadcrumb","TreeVisualization","jsxDEV","_jsxDEV","safeFetch","url","response","fetch","ok","errorText","text","error","Error","status","responseText","trim","JSON","parse","console","NodePage","_s","id","navigate","node","setNode","useState","children","setChildren","path","setPath","treeData","setTreeData","isLoading","setIsLoading","setError","useEffect","fetchData","urls","nodeData","childrenData","pathData","Promise","all","map","reverse","message","className","role","fileName","_jsxFileName","lineNumber","columnNumber","maxDepth","nodeId","_c","$RefreshReg$"],"sources":["/Users/yc/Documents/MainWebsiteTree/Algorithm+TopicSutff/algorithm-app/src/pages/NodePage.js"],"sourcesContent":["import React from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport NodeDetails from '../components/NodePageComponents/NodeDetails';\nimport CommentsSection from '../components/NodePageComponents/CommentsSection';\nimport ChildrenList from '../components/NodePageComponents/ChildrenList';\nimport ActionButtons from '../components/NodePageComponents/ActionButtons';\nimport Breadcrumb from '../components/NodePageComponents/Breadcrumb';\nimport TreeVisualization from '../components/NodePageComponents/TreeVisualization';\nimport '../css/NodePage.css';\n\n// Utility function for safe JSON parsing [5,9](@ref)\nconst safeFetch = async (url) => {\n  try {\n    const response = await fetch(url);\n    \n    // Handle HTTP errors (4xx/5xx status codes) [1,4](@ref)\n    if (!response.ok) {\n      const errorText = await response.text();\n      const error = new Error(\n        `HTTP error! Status: ${response.status}, URL: ${url}`\n      );\n      error.response = response;\n      error.responseText = errorText;\n      throw error;\n    }\n    \n    // Handle empty responses [5,9](@ref)\n    const text = await response.text();\n    if (!text.trim()) {\n      throw new Error('Empty response received');\n    }\n    \n    return JSON.parse(text);\n  } catch (error) {\n    console.error(`Fetch error for ${url}:`, error);\n    throw error;\n  }\n};\n\nconst NodePage = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [node, setNode] = React.useState(null);\n  const [children, setChildren] = React.useState([]);\n  const [path, setPath] = React.useState([]);\n  const [treeData, setTreeData] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n\n  // Fetch node data with comprehensive error handling [2,5](@ref)\n  React.useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      setError(null);\n      \n      try {\n        const urls = [\n          `http://localhost:5000/api/nodes/${id}`,\n          `http://localhost:5000/api/nodes/${id}/children`,\n          `http://localhost:5000/api/nodes/${id}/path`,\n          `http://localhost:5000/api/nodes/${id}/tree?depth=4`\n        ];\n        \n        const [nodeData, childrenData, pathData, treeData] = await Promise.all(\n          urls.map(url => safeFetch(url))\n        );\n        \n        setNode(nodeData);\n        setChildren(childrenData);\n        setPath(pathData.reverse());\n        setTreeData(treeData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError({\n          message: error.message,\n          responseText: error.responseText || 'No additional error details'\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [id]);\n\n  if (isLoading) {\n    return (\n      <div className=\"d-flex justify-content-center my-5\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"alert alert-danger\">\n        <h5>Error Loading Data</h5>\n        <p>{error.message}</p>\n        {error.responseText && (\n          <div className=\"mt-2\">\n            <small>Server response:</small>\n            <pre className=\"bg-light p-2 mt-1\">{error.responseText}</pre>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  if (!node) return <div className=\"alert alert-danger\">Node not found</div>;\n\n  return (\n    <div className=\"container py-4\">\n      <Breadcrumb path={path} />\n      <NodeDetails node={node} />\n      <TreeVisualization \n        treeData={treeData} \n        maxDepth={4}\n      />\n      <CommentsSection nodeId={id} />\n      <ChildrenList children={children} />\n      <ActionButtons node={node} navigate={navigate} nodeId={id} />\n    </div>\n  );\n};\n\nexport default NodePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}