{"ast":null,"code":"var _jsxFileName = \"/Users/yc/Documents/MainWebsiteTree/Algorithm+TopicSutff/algorithm-app/src/pages/RootsPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootsPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [roots, setRoots] = React.useState([]); // Initialize as empty array\n  const [loading, setLoading] = React.useState(true);\n  React.useEffect(() => {\n    const fetchRoots = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/roots/${id}');\n        const data = await response.json();\n\n        // 1. Ensure data is always an array\n        if (Array.isArray(data)) {\n          setRoots(data);\n        } else {\n          console.error('API response is not an array:', data);\n          setRoots([]); // Fallback to empty array\n        }\n      } catch (error) {\n        console.error('Error fetching root nodes:', error);\n        setRoots([]); // Fallback to empty array on error\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRoots();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading root nodes...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 23\n  }, this);\n\n  // 2. Add safeguard before mapping\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Root Nodes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: Array.isArray(roots) ? roots.map(root => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/node/${root.id}`,\n          children: [\"Node \", root.id, \" (Popularity: \", root.popularity, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, root.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: \"No root nodes found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(RootsPage, \"DYrwK7cQBIRVndvV3AnGbzqhOq0=\", false, function () {\n  return [useParams];\n});\n_c = RootsPage;\nexport default RootsPage;\nvar _c;\n$RefreshReg$(_c, \"RootsPage\");","map":{"version":3,"names":["React","useParams","Link","jsxDEV","_jsxDEV","RootsPage","_s","id","roots","setRoots","useState","loading","setLoading","useEffect","fetchRoots","response","fetch","data","json","Array","isArray","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","root","to","popularity","_c","$RefreshReg$"],"sources":["/Users/yc/Documents/MainWebsiteTree/Algorithm+TopicSutff/algorithm-app/src/pages/RootsPage.js"],"sourcesContent":["import React from 'react';\nimport {useParams, Link } from 'react-router-dom';\n\nconst RootsPage = () => {\n  const { id } = useParams();\n  const [roots, setRoots] = React.useState([]); // Initialize as empty array\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    const fetchRoots = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/roots/${id}');\n        const data = await response.json();\n        \n        // 1. Ensure data is always an array\n        if (Array.isArray(data)) {\n          setRoots(data);\n        } else {\n          console.error('API response is not an array:', data);\n          setRoots([]); // Fallback to empty array\n        }\n        \n      } catch (error) {\n        console.error('Error fetching root nodes:', error);\n        setRoots([]); // Fallback to empty array on error\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRoots();\n  }, []);\n\n  if (loading) return <div>Loading root nodes...</div>;\n\n  // 2. Add safeguard before mapping\n  return (\n    <div>\n      <h1>Root Nodes</h1>\n      <ul className=\"list-group\">\n        {Array.isArray(roots) ? (\n          roots.map(root => (\n            <li key={root.id} className=\"list-group-item\">\n              <Link to={`/node/${root.id}`}>\n                Node {root.id} (Popularity: {root.popularity})\n              </Link>\n            </li>\n          ))\n        ) : (\n          <li className=\"list-group-item\">No root nodes found</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default RootsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}