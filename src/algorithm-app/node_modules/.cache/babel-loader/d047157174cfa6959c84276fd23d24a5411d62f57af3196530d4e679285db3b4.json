{"ast":null,"code":"var _jsxFileName = \"/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeLoginAuth/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { checkSession, loginUser, logoutUser, loginWithGoogle } from '../services/auth'; // Add logoutUser import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null); // Track authentication errors\n\n  // Initialize session on app load\n  useEffect(() => {\n    let isMounted = true; // Prevent state updates on unmounted component\n\n    const initializeAuth = async () => {\n      try {\n        const userData = await checkSession();\n        if (isMounted) setUser(userData);\n      } catch (err) {\n        if (isMounted) {\n          setUser(null);\n          setError('Session validation failed');\n        }\n      } finally {\n        if (isMounted) setLoading(false);\n      }\n    };\n    initializeAuth();\n    return () => {\n      isMounted = false; // Cleanup function\n    };\n  }, []);\n\n  // Handle login with proper error handling\n  const login = async (email, password) => {\n    setLoading(true); // Set loading during login process\n    try {\n      const userData = await loginUser(email, password);\n      setUser(userData);\n      setError(null); // Clear previous errors\n      return userData; // Return data for redirection\n    } catch (err) {\n      setError('Login failed. Check credentials');\n      throw err; // Rethrow for UI handling\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add logout functionality\n  const logout = async () => {\n    setLoading(true);\n    try {\n      await logoutUser();\n      setUser(null);\n    } catch (err) {\n      setError('Logout failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loginWithGoogle = async token => {\n    setLoading(true);\n    try {\n      const userData = await loginWithGoogle(token);\n      setUser(userData);\n      setError(null);\n      return userData;\n    } catch (err) {\n      setError('Google login failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      login,\n      logout,\n      loginWithGoogle,\n      isLoggedIn: !!user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","checkSession","loginUser","logoutUser","loginWithGoogle","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","isMounted","initializeAuth","userData","err","login","email","password","logout","token","Provider","value","isLoggedIn","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/yc/Documents/MainWebsiteTree/ActualWebsite/Algorithm+TopicSutff/algorithm-app/src/CodeLoginAuth/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { checkSession, loginUser, logoutUser,loginWithGoogle } from '../services/auth'; // Add logoutUser import\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null); // Track authentication errors\n\n  // Initialize session on app load\n  useEffect(() => {\n    let isMounted = true; // Prevent state updates on unmounted component\n    \n    const initializeAuth = async () => {\n      try {\n        const userData = await checkSession();\n        if (isMounted) setUser(userData);\n      } catch (err) {\n        if (isMounted) {\n          setUser(null);\n          setError('Session validation failed');\n        }\n      } finally {\n        if (isMounted) setLoading(false);\n      }\n    };\n    \n    initializeAuth();\n    \n    return () => {\n      isMounted = false; // Cleanup function\n    };\n  }, []);\n\n  // Handle login with proper error handling\n  const login = async (email, password) => {\n    setLoading(true); // Set loading during login process\n    try {\n      const userData = await loginUser(email, password);\n      setUser(userData);\n      setError(null); // Clear previous errors\n      return userData; // Return data for redirection\n    } catch (err) {\n      setError('Login failed. Check credentials');\n      throw err; // Rethrow for UI handling\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add logout functionality\n  const logout = async () => {\n    setLoading(true);\n    try {\n      await logoutUser();\n      setUser(null);\n    } catch (err) {\n      setError('Logout failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loginWithGoogle = async (token) => {\n    setLoading(true);\n    try {\n      const userData = await loginWithGoogle(token);\n      setUser(userData);\n      setError(null);\n      return userData;\n    } catch (err) {\n      setError('Google login failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, error, login, logout, loginWithGoogle, isLoggedIn: !!user }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}